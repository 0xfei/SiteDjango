<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Final//EN">
<HTML>
<HEAD>
<TITLE>
保护模式教程
</TITLE>
<LINK REL=StyleSheet TYPE="text/css" HREF="main.css">
</HEAD>
<BODY CLASS=course>
<CENTER><H1 STYLE="color:'#0000ff'">六.控制转移</H1></CENTER>
<DIV>
控制转移基本上可分为两大类：同一任务内的控制转移和任务间的控制转移(任务
切换)。同一任务内的控制转移又可分为：段内转移、特权级不变的段间转移和特
权级变换的段间转移。段内转移与实模式下相似，不涉及特权级变换和任务切换。
只有段间转移才涉及特权级变换和任务切换。本文介绍保护方式下的控制转移，
重点是任务内的特权级变换和任务间的切换。
<A HREF="../DOWNLOAD/asm345.exe">这里下载本文所有源代码</A>。
</DIV>
<H2 STYLE="color:'#009999'">&#60;一&#62;任务内无特权级变换的转移</H2>
<DIV>
各种段内转移与实模式下相似，当然不涉及特权级变换和任务切换。只有各种形式
的段间转移才涉及特权级变换和任务切换。
</DIV>
<H3>1.段间转移指令</H3>
<DIV>
与实模式下相同，指令JMP、CALL和RET都具有段间转移的功能，指令INT和IRET总是
段间转移。此外，中断/异常也将引起段间转移。有时把这些具有段间转移功能的指
令统称为段间转移指令。
</DIV>
<DIV>
在保护模式下，段间转移的目标位置由选择子和偏移构成的地址表示，常把它称为
目标地址指针。在32位代码段中，上述指针内的偏移使用32位表示，这样的指针也
称为48位全指针。在实例二的32位代码段内就使用了48位全指针。在16位代码段中
，上述指针内的偏移只使用16位表示。
</DIV>
<DIV>
与实模式下相似，段间转移指令JMP和段间调用指令CALL还可分为段间直接转移和段
间间接转移两类。如果指令JMP和CALL在指令中直接含有目标地址指针，那么就是段
间直接转移；如果指令中含有指向包含目标地址指针的门描述符或TSS描述符的指针
，那么就是段间间接转移，这种指针只有选择子部分有效，指示调用门、任务门或
TSS描述符，而偏移部分不起作用。实际上，当段间转移指令JMP和段间调用指令CALL所
含指针的选择子部分指示代码段描述符，那么就是段间直接转移，偏移部分表示目
标代码段的入口点；当选择子部分指示门描述符或TSS描述符时，就是段间间接转移。
</DIV>
<H3>2.向目标代码段转移的步骤</H3>
<DIV>
处理器在执行上述段间转移指令向目标代码段实施转移的过程中，一般至少要经过如
下步骤：
</DIV>
<DIV>
(1)判断目标地址指针内的选择子指示的描述符是否为空描述符。空描述符是GDT中的
第0个描述符，是一个特殊的描述符。目标代码段描述符不能为空描述符，也即选择
子的高14位不能为0。
</DIV>
<DIV>
(2)从全局或局部描述符表内读出目标代码段描述符。由选择子内的TI位，确定使用
全局描述符表还是局部描述符表。
</DIV>
<DIV>
(3)根据情况，检测描述符类型是否正确；调整RPL。
</DIV>
<DIV>
(4)把目标代码段描述符内的有关内容装载到CS高速缓冲寄存器。
</DIV>
<DIV>
(5)判断目标地址指针内的偏移是否越出代码段的界限。目标地址指针内的偏移必须
不超过目标代码段界限。
</DIV>
<DIV>
(6)装载CS段寄存器和指令指针寄存器EIP；CPL存入CS内选择子的RPL字段。
</DIV>
<DIV>
上述步骤只是对转移过程的简单说明，实际的动作还要复杂。在把目标代码段描述符
内的有关内容转载到CS高速缓冲寄存器时，还要进行如下保护检测，其中的DPL表示
目标代码段描述符的特权级：
</DIV>
<DIV>
(1)对于非一致代码段，要求CPL=DPL，RPL<=DPL；对于一致代码段，要求CPL>=DPL。
</DIV>
<DIV>
(2)代码段必须存在，即描述符中的P位必须是1。
</DIV>
<DIV>
通常描述符特权级DPL规定了对应段的特权级。如果描述符描述的是数据段，那么DPL就
规定了访问该数据段的最外层特权级；如果描述符描述的是代码段，那么DPL就规定了
执行该代码段所需要的CPL。但从上述装载CS高速缓冲寄存器时进行的保护检测可见，
对于一致代码段，却要求CPL>=DPL,也就是说，一致代码段描述符中的DPL规定了可以转
移到一致代码段的最内层特权级。于是，3级的程序可以转移到任何一致的代码段，而0级
的程序只允许转移到DPL等于0的一致代码段。一致代码段描述符内DPL的这种解释，正好
与正常的DPL的解释相反。
</DIV>
<DIV>
一致的可执行段是一种特别的段。这种存储段，为在多个特权级执行的程序，提供对子例
程的共享支持，而不要求改变特权级。例如，通过把数值库例程放在一致的代码段中，可
以使不同级执行的程序共享数值库例程。这样，任何特权级的程序可以使用段间调用指令
，调用库中的例程，并在调用者所具有的特权级执行该例程。
</DIV>
<H3>3.任务内无特权级变换的转移</H3>
<DIV>
所谓任务内无特权级变换的转移指：在转移到新的代码段时，当前特权级CPL保持不变。
利用段间转移指令JMP、段间调用指令CALL和段间返回指令RET可实现任务内无特权级变换
的转移。利用INT指令和IRET指令也可实现任务内无特权级变换的转移。
</DIV>
<H4 CLASS=indent>(1)利用段间直接转移指令JMP或CALL</H4>
<DIV>
在执行段间转移指令JMP时，如果指令内所含指针指示一个代码段，那么就直接开始上述
向目标代码段转移的步骤；在执行段间调用指令CALL时，如果指令内所含指针指针指示一
个代码段，那么就把返回地址指针压栈，然后就直接开始上述向目标代码段转移的步骤。
顺利通过这几步(不调整RPL)后，就完成了任务内无特权级变换的转移。
</DIV>
<DIV>
由此可见，利用段间直接转移指令JMP或调用指令CALL可方便地进行任务内无特权级变换
的转移，但不能进行任务内特权级变换的转移。
</DIV>
<H4 CLASS=indent>(2)利用段间返回指令RET</H4>
<DIV>
在执行段间返回指令RET时，如果从堆栈中弹出的目标地址指针指示一个代码段，并且选
择子符合RPL=CPL的条件，那么就开始上述向目标代码段的转移步骤。顺利通过这几步后
，就完成了任务内无特权级变换的转移。
</DIV>
<DIV>
通常情况下，段间返回指令RET与段间调用指令CALL对应。在利用段间调用指令CALL以任
务内无特权级变换的方式转移到某个子程序后，在子程序内利用段间返回指令RET以任务
内无特权级变换的方式返回主程序。由于调用时无特权级变换，所以返回时也无特权级变
换，如果真是如此，那么必须能够满足条件RPL=CPL。
</DIV>
<H4 CLASS=indent>(3)利用调用门和其它途径</H4>
<DIV>
如何利用调用门实行和其它方法实现任务内无特权级变换的转移将在后面的文章中介绍。
</DIV>
<H3>4.装载数据段和堆栈段寄存器时的特权检测</H3>
<DIV>
上面简单地说明了把选择子装入代码段寄存器CS时为实现保护而进行的检测，下面也简单
地说明在把选择子装入数据段寄存器和堆栈段寄存器时要进行的检测。
</DIV>
<DIV>
在把选择子装入数据段寄存器DS、ES、FS或GS时，要进行如下检测：
</DIV>
<DIV>
(1)选择子不能为空；
</DIV>
<DIV>
(2)选择子指定的描述符必须是数据段描述符、可读可执行的代码段或一致可读的可执行
代码段的描述符；
</DIV>
<DIV>
(3)对于数据段和可读可执行代码段，要求CPL<=DPL，RPL<=DPL；
</DIV>
<DIV>
(4)对应的段必须存在。
</DIV>
<DIV>
若装入的选择子不满足上述要求，则会产生异常。
</DIV>
<DIV>
在把选择子装入堆栈段寄存器SS时要进行如下检测：
</DIV>
<DIV>
(1)选择子不能为空；
</DIV>
<DIV>
(2)选择子指定的描述符必须是可读写的数据段描述符；
</DIV>
<DIV>
(3)要求CPL=DPL=RPL；
</DIV>
<DIV>
(4)对应段必须存在。
</DIV>
<DIV>
若装入的选择子不满足上述条件，则在装入SS时就会引起异常。
</DIV>
<H2 STYLE="color:'#009999'">&#60;二&#62;演示任务内无特权级变换转移的实例(实例三)</H2>
<DIV>
在实例二中，32位代码段到16位代码段的转移就是任务内无特权级转移的例子。
</DIV>
<DIV>
下面再给出一个用于演示任务内无特权级变换转移的实例。该实例使用了段间转移指令JMP、
段间调用指令CALL和段间返回指令RET实现同一任务内相同特权级的转移。该实例还建立并使
用了局部描述符表LDT。
</DIV>
<H3>1.实现步骤和源程序</H3>
<DIV>
实现步骤如下：(1)实模式下的初始化，包括对GDT和演示任务LDT的初始化，装载GDTR；(2)从
实模式切换到保护模式，处于0特权级；(3)装载LDTR，并设置堆栈；(4)利用段间转移指
令JMP实现从代码段K到同级代码段L的转移；(5)利用段间调用指令CALL调用同级代码段C中的
子程序D显示字符串信息；(6)利用段间调用指令CALL调用同级代码段C中的子程序H把十六进制
数转换成对应的ASCII码；(7)再利用段间调用指令CALL调用同级代码段C中的子程序D显示字符
串信息；(8)利用段间转移指令JMP实现从代码段L到代码段K的转移；(9)从保护模式切换到实
模式；(10)在实模式下结束程序。
</DIV>
<DIV>
该实例的逻辑功能是用十六进制数的形式显示代码段L的段界限的值。源程序如下：
</DIV>
<PRE>
<FONT CLASS=comment>;名称:ASM3.ASM</FONT>
<FONT CLASS=comment>;功能:演示任务内无特权级变换的转移</FONT>
<FONT CLASS=comment>;编译:TASM ASM3.ASM</FONT>
<FONT CLASS=comment>;连接:TLINK ASM3.OBJ</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
<FONT CLASS=pseudo>INCLUDE</FONT>         386SCD.INC
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
GDTSeg          <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT> <FONT CLASS=string>'GDT'</FONT>          <FONT CLASS=comment>;全局描述符表数据段(16位)</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
GDT             <FONT CLASS=pseudo>LABEL</FONT>   <FONT CLASS=pseudo>BYTE</FONT>                      <FONT CLASS=comment>;全局描述符表</FONT>
DUMMY           Desc    <FONT CLASS=symbol>&lt;&gt;</FONT>                        <FONT CLASS=comment>;空描述符</FONT>
Normal          Desc    <FONT CLASS=symbol>&lt;</FONT><FONT CLASS=number>0ffffh</FONT><FONT CLASS=symbol>,,,</FONT>ATDW<FONT CLASS=symbol>,,&gt;</FONT>         <FONT CLASS=comment>;规范段描述符</FONT>
CodeK           Desc    <FONT CLASS=symbol>&lt;</FONT><FONT CLASS=number>0ffffh</FONT><FONT CLASS=symbol>,,,</FONT>ATCE<FONT CLASS=symbol>,,&gt;</FONT>         <FONT CLASS=comment>;代码段K的描述符</FONT>
LDTable         Desc    <FONT CLASS=symbol>&lt;</FONT>LDTLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,,,</FONT>ATLDT<FONT CLASS=symbol>,,&gt;</FONT>      <FONT CLASS=comment>;局部描述符表段的描述符</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
GDTLen          <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$-</FONT>GDT                     <FONT CLASS=comment>;全局描述符表长度</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
Normal_Sel      <FONT CLASS=symbol>=</FONT>       Normal<FONT CLASS=symbol>-</FONT>GDT                <FONT CLASS=comment>;规范段描述符选择子</FONT>
CodeK_Sel       <FONT CLASS=symbol>=</FONT>       CodeK<FONT CLASS=symbol>-</FONT>GDT                 <FONT CLASS=comment>;代码段K的选择子</FONT>
LDT_Sel         <FONT CLASS=symbol>=</FONT>       LDTable<FONT CLASS=symbol>-</FONT>GDT               <FONT CLASS=comment>;局部描述符表段的选择子</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
GDTSeg          <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;全局描述符表段定义结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
LDTSeg          <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT> <FONT CLASS=string>'LDT'</FONT>          <FONT CLASS=comment>;局部描述符表数据段(16位)</FONT>
LDT             <FONT CLASS=pseudo>LABEL</FONT>   <FONT CLASS=pseudo>BYTE</FONT>                      <FONT CLASS=comment>;局部描述符表</FONT>
<FONT CLASS=comment>;代码段L的描述符</FONT>
CodeL           Desc    <FONT CLASS=symbol>&lt;</FONT>CodeLLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>CodeLSeg<FONT CLASS=symbol>,,</FONT>ATCE<FONT CLASS=symbol>,,&gt;</FONT>
<FONT CLASS=comment>;代码段C的描述符</FONT>
CodeC           Desc    <FONT CLASS=symbol>&lt;</FONT>CodeCLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>CodeCSeg<FONT CLASS=symbol>,,</FONT>ATCE<FONT CLASS=symbol>,,&gt;</FONT>
<FONT CLASS=comment>;显示缓冲区段描述符</FONT>
VideoBuf        Desc    <FONT CLASS=symbol>&lt;</FONT><FONT CLASS=number>0ffffh</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>0b800h</FONT><FONT CLASS=symbol>,,</FONT>ATDW<FONT CLASS=symbol>,,&gt;</FONT>
<FONT CLASS=comment>;LDT别名段描述符(DPL=3)</FONT>
ToLDT           Desc    <FONT CLASS=symbol>&lt;</FONT>LDTLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>LDTSEG<FONT CLASS=symbol>,,</FONT>ATDR<FONT CLASS=symbol>+</FONT>DPL3<FONT CLASS=symbol>,,&gt;</FONT>
<FONT CLASS=comment>;显示信息缓冲区数据段描述符(DPL=3)</FONT>
MData           Desc    <FONT CLASS=symbol>&lt;</FONT>MDataLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>MDataSeg<FONT CLASS=symbol>,,</FONT>ATDW<FONT CLASS=symbol>+</FONT>DPL3<FONT CLASS=symbol>,,&gt;</FONT>
<FONT CLASS=comment>;堆栈段描述符</FONT>
StackS          Desc    <FONT CLASS=symbol>&lt;</FONT>TopOfS<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>StackSeg<FONT CLASS=symbol>,,</FONT>ATDWA<FONT CLASS=symbol>,,&gt;</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
LDTLen          <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$-</FONT>LDT                     <FONT CLASS=comment>;LDT所占字节数</FONT>
LDNum           <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>($-</FONT>LDT<FONT CLASS=symbol>)/(</FONT><FONT CLASS=pseudo>SIZE</FONT> Desc<FONT CLASS=symbol>)</FONT>       <FONT CLASS=comment>;LDT含描述符项数</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
CodeL_Sel       <FONT CLASS=symbol>=</FONT>       CodeL<FONT CLASS=symbol>-</FONT>LDT<FONT CLASS=symbol>+</FONT>TIL             <FONT CLASS=comment>;代码段L的选择子</FONT>
CodeC_Sel       <FONT CLASS=symbol>=</FONT>       CodeC<FONT CLASS=symbol>-</FONT>LDT<FONT CLASS=symbol>+</FONT>TIL             <FONT CLASS=comment>;代码段C的选择子</FONT>
Video_Sel       <FONT CLASS=symbol>=</FONT>       VideoBuf<FONT CLASS=symbol>-</FONT>LDT<FONT CLASS=symbol>+</FONT>TIL          <FONT CLASS=comment>;显示缓冲区选择子</FONT>
ToLDT_Sel       <FONT CLASS=symbol>=</FONT>       ToLDT<FONT CLASS=symbol>-</FONT>LDT<FONT CLASS=symbol>+</FONT>TIL             <FONT CLASS=comment>;LDT别名段选择子</FONT>
MData_Sel       <FONT CLASS=symbol>=</FONT>       MData<FONT CLASS=symbol>-</FONT>LDT<FONT CLASS=symbol>+</FONT>TIL<FONT CLASS=symbol>+</FONT>RPL3        <FONT CLASS=comment>;显示信息数据段选择子</FONT>
Stack_Sel       <FONT CLASS=symbol>=</FONT>       StackS<FONT CLASS=symbol>-</FONT>LDT<FONT CLASS=symbol>+</FONT>TIL            <FONT CLASS=comment>;堆栈段选择子</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
LDTSeg          <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;局部描述符表段定义结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
MDataSeg        <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT> <FONT CLASS=string>'MDATA'</FONT>        <FONT CLASS=comment>;显示信息缓冲区数据段</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
Message         <FONT CLASS=pseudo>DB</FONT>      <FONT CLASS=string>'Value='</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>
Buffer          <FONT CLASS=pseudo>DB</FONT>      <FONT CLASS=number>80</FONT> <FONT CLASS=pseudo>DUP</FONT><FONT CLASS=symbol>(</FONT><FONT CLASS=number>0</FONT><FONT CLASS=symbol>)</FONT>
MDataLen        <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
MDataSeg        <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;显示缓冲区数据段结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
StackSeg        <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>DWORD</FONT> <FONT CLASS=pseudo>USE16</FONT> <FONT CLASS=string>'STACK'</FONT>       <FONT CLASS=comment>;堆栈段</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
                <FONT CLASS=pseudo>DW</FONT>      <FONT CLASS=number>512</FONT> <FONT CLASS=pseudo>DUP</FONT><FONT CLASS=symbol>(?)</FONT>
TopOfS          <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
StackSeg        <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;堆栈段结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
CodeCSeg        <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT> <FONT CLASS=string>'CODEC'</FONT>        <FONT CLASS=comment>;任务代码段C</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>CS</FONT>:CodeCSeg
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
<FONT CLASS=comment>;显示信息子程序</FONT>
<FONT CLASS=comment>;入口参数:fs:si指向要显示的以0结尾的字符串,es:di指向显示缓冲区</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DispMsg         <FONT CLASS=pseudo>PROC</FONT>    <FONT CLASS=pseudo>FAR</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ah</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>01001110b</FONT>
<FONT CLASS=label>Disp1:</FONT>          <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>BYTE</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>fs</FONT>:<FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>]</FONT>
                <FONT CLASS=instruct>inc</FONT>     <FONT CLASS=register>si</FONT>
                <FONT CLASS=instruct>or</FONT>      <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>al</FONT>
                <FONT CLASS=instruct>jz</FONT>      Disp2
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>es</FONT>:<FONT CLASS=symbol>[</FONT><FONT CLASS=register>di</FONT><FONT CLASS=symbol>],</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>inc</FONT>     <FONT CLASS=register>di</FONT>
                <FONT CLASS=instruct>inc</FONT>     <FONT CLASS=register>di</FONT>
                <FONT CLASS=instruct>jmp</FONT>     Disp1
<FONT CLASS=label>Disp2:</FONT>          <FONT CLASS=instruct>ret</FONT>
DispMsg         <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
<FONT CLASS=comment>;把AL寄存器低4位二进制数(一位16进制数)转换成ASCII码</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
HToASCII        <FONT CLASS=pseudo>PROC</FONT>    <FONT CLASS=pseudo>FAR</FONT>
                <FONT CLASS=instruct>and</FONT>     <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>00001111b</FONT>
                <FONT CLASS=instruct>add</FONT>     <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>90h</FONT>
                <FONT CLASS=instruct>daa</FONT>
                <FONT CLASS=instruct>adc</FONT>     <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>40h</FONT>
                <FONT CLASS=instruct>daa</FONT>
                <FONT CLASS=instruct>ret</FONT>
HToASCII        <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
CodeCLen        <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
CodeCSeg        <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;代码段C定义结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
CodeLSeg        <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT> <FONT CLASS=string>'CODEL'</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>CS</FONT>:CodeLSeg
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
Virtual2        <FONT CLASS=pseudo>PROC</FONT>    <FONT CLASS=pseudo>FAR</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>Video_Sel              <FONT CLASS=comment>;设置显示缓冲区指针</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>es</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>di</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>1986</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>MData_Sel              <FONT CLASS=comment>;设置提示信息缓冲区指针</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>fs</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>si</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>OFFSET</FONT> Message
                <FONT CLASS=macro>CALL16</FONT>  CodeC_Sel<FONT CLASS=symbol>,</FONT>DispMsg         <FONT CLASS=comment>;显示提示信息</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>ToLDT_Sel              <FONT CLASS=comment>;把演示任务的LDT的别名</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>gs</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>                     <FONT CLASS=comment>;段的描述符选择子装入GS</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>dx</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>gs</FONT>:CodeL<FONT CLASS=symbol>.</FONT>LimitL
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>si</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>OFFSET</FONT> Buffer          <FONT CLASS=comment>;取代码段L的段界限值</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>cx</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4</FONT>                      <FONT CLASS=comment>;并转成对应可显示字符串</FONT>
<FONT CLASS=label>Vir:</FONT>            <FONT CLASS=instruct>rol</FONT>     <FONT CLASS=register>dx</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>dl</FONT>
                <FONT CLASS=macro>CALL16</FONT>  CodeC_Sel<FONT CLASS=symbol>,</FONT>HToASCII
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>BYTE</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>fs</FONT>:<FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>],</FONT><FONT CLASS=register>al</FONT>
                <FONT CLASS=instruct>inc</FONT>     <FONT CLASS=register>si</FONT>
                <FONT CLASS=instruct>loop</FONT>    Vir
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>fs</FONT>:<FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>],</FONT><FONT CLASS=string>'H'</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>si</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>OFFSET</FONT> Buffer
                <FONT CLASS=macro>CALL16</FONT>  CodeC_Sel<FONT CLASS=symbol>,</FONT>DispMsg
                <FONT CLASS=macro>JUMP16</FONT>  CodeK_Sel<FONT CLASS=symbol>,</FONT>Virtual3
CodeLLen        <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
Virtual2        <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
CodeLSeg        <FONT CLASS=pseudo>ENDS</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
CodeKSeg        <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT> <FONT CLASS=string>'CODEK'</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>CS</FONT>:CodeKSeg
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
Virtual1        <FONT CLASS=pseudo>PROC</FONT>    <FONT CLASS=pseudo>FAR</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>LDT_Sel
                <FONT CLASS=instruct>LLDT</FONT>    <FONT CLASS=register>ax</FONT>                        <FONT CLASS=comment>;加载局部描述符表寄存器LDTR</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>Stack_Sel
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ss</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>                     <FONT CLASS=comment>;建立演示任务堆栈</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>sp</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>OFFSET</FONT> TopOfS
                <FONT CLASS=macro>JUMP16</FONT>  CodeL_Sel<FONT CLASS=symbol>,</FONT>Virtual2
<FONT CLASS=label>Virtual3:</FONT>       <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>Normal_Sel
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>es</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>fs</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>gs</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ss</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>cr0</FONT>
                <FONT CLASS=instruct>and</FONT>     <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>11111110b</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>cr0</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>eax</FONT>
                <FONT CLASS=macro>JUMP16</FONT>  <FONT CLASS=symbol>&lt;</FONT><FONT CLASS=pseudo>SEG</FONT> Real<FONT CLASS=symbol>&gt;,&lt;</FONT><FONT CLASS=pseudo>OFFSET</FONT> Real<FONT CLASS=symbol>&gt;</FONT>
CodeKLen        <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
Virtual1        <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
CodeKSeg        <FONT CLASS=pseudo>ENDS</FONT>
<FONT CLASS=comment>;============================================================================</FONT>
RDataSeg        <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>                <FONT CLASS=comment>;实方式数据段</FONT>
VGDTR           PDesc   <FONT CLASS=symbol>&lt;</FONT>GDTLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,&gt;</FONT>               <FONT CLASS=comment>;GDT伪描述符</FONT>
SPVar           <FONT CLASS=pseudo>DW</FONT>      <FONT CLASS=symbol>?</FONT>                         <FONT CLASS=comment>;用于保存实方式下的SP</FONT>
SSVar           <FONT CLASS=pseudo>DW</FONT>      <FONT CLASS=symbol>?</FONT>                         <FONT CLASS=comment>;用于保存实方式下的SS</FONT>
RDataSeg        <FONT CLASS=pseudo>ENDS</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
RCodeSeg        <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>CS</FONT>:RCodeSeg
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
Start           <FONT CLASS=pseudo>PROC</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>DS</FONT>:GDTSeg
                <FONT CLASS=comment>;-----------------</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>GDTSeg
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ds</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=comment>;初始化全局描述符表</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>bx</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>16</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>CodeKSeg
                <FONT CLASS=instruct>mul</FONT>     <FONT CLASS=register>bx</FONT>
                <FONT CLASS=instruct>mov</FONT>     CodeK<FONT CLASS=symbol>.</FONT>BaseL<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     CodeK<FONT CLASS=symbol>.</FONT>BaseM<FONT CLASS=symbol>,</FONT><FONT CLASS=register>dl</FONT>
                <FONT CLASS=instruct>mov</FONT>     CodeK<FONT CLASS=symbol>.</FONT>BaseH<FONT CLASS=symbol>,</FONT><FONT CLASS=register>dh</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>LDTSeg
                <FONT CLASS=instruct>mul</FONT>     <FONT CLASS=register>bx</FONT>
                <FONT CLASS=instruct>mov</FONT>     LDTable<FONT CLASS=symbol>.</FONT>BaseL<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     LDTable<FONT CLASS=symbol>.</FONT>BaseM<FONT CLASS=symbol>,</FONT><FONT CLASS=register>dl</FONT>
                <FONT CLASS=instruct>mov</FONT>     LDTable<FONT CLASS=symbol>.</FONT>BaseH<FONT CLASS=symbol>,</FONT><FONT CLASS=register>dh</FONT>
                <FONT CLASS=comment>;设置GDT伪描述符</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>DS</FONT>:RDataSeg
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>RDataSeg
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ds</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>GDTSeg
                <FONT CLASS=instruct>mul</FONT>     <FONT CLASS=register>bx</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> VGDTR<FONT CLASS=symbol>.</FONT>Base<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> VGDTR<FONT CLASS=symbol>.</FONT>Base<FONT CLASS=symbol>+</FONT><FONT CLASS=number>2</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>dx</FONT>
                <FONT CLASS=comment>;初始化演示任务LDT</FONT>
                <FONT CLASS=instruct>cld</FONT>
                <FONT CLASS=instruct>call</FONT>    Init_MLDT
                <FONT CLASS=comment>;保存实方式堆栈指针</FONT>
                <FONT CLASS=instruct>mov</FONT>     SSVar<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ss</FONT>
                <FONT CLASS=instruct>mov</FONT>     SPVar<FONT CLASS=symbol>,</FONT><FONT CLASS=register>sp</FONT>
                <FONT CLASS=comment>;装载GDTR</FONT>
                <FONT CLASS=instruct>lgdt</FONT>    <FONT CLASS=pseudo>QWORD</FONT> <FONT CLASS=pseudo>PTR</FONT> VGDTR
                <FONT CLASS=instruct>cli</FONT>
                <FONT CLASS=comment>;切换到保护方式</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>cr0</FONT>
                <FONT CLASS=instruct>or</FONT>      <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>1</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>cr0</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>eax</FONT>
                <FONT CLASS=macro>JUMP16</FONT>  <FONT CLASS=symbol>&lt;</FONT>CodeK_Sel<FONT CLASS=symbol>&gt;,&lt;</FONT><FONT CLASS=pseudo>OFFSET</FONT> Virtual1<FONT CLASS=symbol>&gt;</FONT>
<FONT CLASS=label>Real:</FONT>           <FONT CLASS=comment>;又回到实方式</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>RDataSeg
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ds</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>lss</FONT>     <FONT CLASS=register>sp</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>DWORD</FONT> <FONT CLASS=pseudo>PTR</FONT> SPVar
                <FONT CLASS=instruct>sti</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4c00h</FONT>
                <FONT CLASS=instruct>int</FONT>     <FONT CLASS=number>21h</FONT>
Start           <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
Init_MLDT       <FONT CLASS=pseudo>PROC</FONT>
                <FONT CLASS=instruct>push</FONT>    <FONT CLASS=register>ds</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>LDTSeg
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ds</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>cx</FONT><FONT CLASS=symbol>,</FONT>LDNum
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>si</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>OFFSET</FONT> LDT
<FONT CLASS=label>InitL:</FONT>          <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseL
                <FONT CLASS=instruct>movzx</FONT>   <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>shl</FONT>     <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4</FONT>
                <FONT CLASS=instruct>shld</FONT>    <FONT CLASS=register>edx</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>16</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseL<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseM<FONT CLASS=symbol>,</FONT><FONT CLASS=register>dl</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseH<FONT CLASS=symbol>,</FONT><FONT CLASS=register>dh</FONT>
                <FONT CLASS=instruct>add</FONT>     <FONT CLASS=register>si</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>SIZE</FONT> Desc
                <FONT CLASS=instruct>loop</FONT>    InitL
                <FONT CLASS=instruct>pop</FONT>     <FONT CLASS=register>ds</FONT>
                <FONT CLASS=instruct>ret</FONT>
Init_MLDT       <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
RCodeSeg        <FONT CLASS=pseudo>ENDS</FONT>
                <FONT CLASS=pseudo>END</FONT>     Start

</PRE>
<H3>2.关于实例三的说明</H3>
<DIV>
有些步骤的实现方法已在前面的实例中做过介绍，下面就任务内无特权级变换的转移和使用局部
描述符LDT等作些说明：
</DIV>
<H4 CLASS=indent>(1)实模式下初始化LDT</H4>
<DIV>
演示任务使用了局部描述符表LDT，本实例中该LDT在实模式下初始化(当然，也可以在使用LDT前
的保护模式初始化)。为了简便，LDT中各描述符的界限和属性值在定义时预置，利用一个子程序
设置各段的段基地址。为方便起见，在定义时把各段的段值安排在相应描述符的段基地址低16位
字段中。由于实例中各段在实模式下定位(这是因为程序是从实模式下启动执行的)，所以把段值
乘以16就是对应的段基地址。
</DIV>
<H4 CLASS=indent>(2)装载LDTR寄存器</H4>
<DIV>
在使用LDT之前，还要装载局部描述符表寄存器LDTR。本实例中的如下两条指令用于装载LDTR：
</DIV>
<PRE>
    <FONT CLASS=instruct>mov</FONT>    <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>LDT_SEL
    <FONT CLASS=instruct>lldt</FONT>   <FONT CLASS=register>ax</FONT>
</PRE>
<DIV>
LLDT指令是专门用于装载LDTR的指令。该指令的操作数是对应LDT段描述符的选择子。根据该选择子，
处理器从GDT中取出相应的LDT段描述符，在进行合法性等检查后，LDT段描述符的基地址和界限等信息
被装入LDTR的高速缓冲寄存器中。由于要引用GDT，所以不能在实模式下装载LDTR。在“操作系统类指
令”一文中将对LLDT指令作详细说明。
</DIV>
<H4 CLASS=indent>(3)利用段间转移指令JMP实现任务内无特权级的转移</H4>
<DIV>
在本实例中进入保护方式后，特权级是0。通过如下段间直接转移指令实现从代码段K到代码段L的转移：
</DIV>
<PRE>
    JUMP16    CodeL_Sel<FONT CLASS=symbol>,</FONT>Virtual2
</PRE>
<DIV>
其中，选择子CodeL_Sel是对应代码段L的描述符的选择子。该描述符在LDT中，所以选择子中的描述
符表指示位TI为1。描述符特权级是0，表示对应代码段的特权级是0，选择子中的请求特权级RPL也
是0。目标代码段不是一致代码段，所以在CPL=DPL，RPL<=DPL的情况下，顺利进行相同特权级的转
移：目标代码段的选择子CodeL_Sel被装入CS，对应描述符中的信息被装入高速缓冲寄存器中，偏移
量Virtual2被装入指令指针寄存器。由于是16位代码段，所以偏移用16位表示。
</DIV>
<DIV>
类似地，通过如下段间直接转移指令实现从代码段L转移到代码段K：
</DIV>
<PRE>
    JUMP16    CodeK_Sel<FONT CLASS=symbol>,</FONT>Virtual3
</PRE>
<DIV>
其中，选择子CodeK_Sel是对应代码段K的描述符选择子。由于描述符在GDT中，所以选择子中的TI位是0。
</DIV>
<H4 CLASS=indent>(4)利用段间调用指令CALL实现任务内无特权级变换的转移</H4>
<DIV>
在代码段L中，通过段间直接调用指令CALL调用了在代码段C中的两个子程序，这些调用都是无特权级变
换的转移。例如，利用如下指令调用了显示字符串子程序DispMsg：
</DIV>
<PRE>
    CALL16    CodeC_Sel<FONT CLASS=symbol>,</FONT>DispMsg
</PRE>
<DIV>
其中，CodeC_Sel是代码段C的选择子，DispMsg表示子程序的入口。描述代码段C的描述符在LDT中，
描述符特权级DPL是0，所以使用的选择子CodeC_Sel的请求特权级RPL是0，描述符表指示位TI为1。
目标代码段C不是一致代码段，所以在CPL=DPL，RPL<=DPL的情况下，顺利进行相同特权级的转移：
当前CS和IP压入堆栈，目标代码段的选择子CodeC_Sel被装入CS，对应描述符中的信息被装入高速缓
冲寄存器中，16位偏移DispMsg被装入指令指针IP。由于是16位段，所以偏移用16位表示，压入堆栈
的是字而不是双字。
</DIV>
<H4 CLASS=indent>(5)段间返回指令RET实现任务内无特权级变换的转移</H4>
<DIV>
段间返回指令RET从堆栈的栈顶弹出返回地址(由选择子和偏移)构成。弹出选择子内的RPL=CPL，并
且对应DPL=CPL，RPL<=DPL是当然的，所以能顺利进行相同特权级的转移。
</DIV>
<H3>3.别名技术</H3>
<DIV>
在上述实例三中，使用了两个描述符来描述演示任务的LDT段。段描述符LDTable被安排在GDT中，
它是系统段描述符，把段LDTSeg描述成演示任务的局部描述符表LDT。描述符ToLDT被安排在LDT中，
它是数据段描述符，把段LDTSeg描述成一个普通数据段。描述符LDTable被装载到LDTR，描述
符ToLDT被装载到某个数据段寄存器。为什么要这样处理呢？根据实例三的功能要求，需要访问演示
任务的局部描述符表LDT段，以取得代码段L的段界限值，这需要通过某个段寄存器进行，
但<FONT STYLE="color:'#ff0000'">不能把系统段描述符的选择子装载到段寄存器</FONT>，所以采
用两个描述符来描述段LDTSeg。
</DIV>
<DIV>
这种为了满足对同一个段实施不同方式操作的需要，而用多个描述符加以描述的技术称为别名技术。
在保护方式程序设计中，常常要采用别名技术。例如：用两个具有不同类型值的描述符来描述同一个
段。再如，用两个具有不同DPL的描述符来描述同一个段。
</DIV>
<H2 STYLE="color:'#009999'">&#60;三&#62;任务内不同特权级的变换</H2>
<DIV>
在一个任务内可以存在四种特权级，所以常常会发生不同特权级之间的变换。例如，外层的应用程
序调用内层操作系统的例程，以获得必要的诸如存储器分配等系统服务。内层操作系统的例程完成
后，返回到外层应用程序。
</DIV>
<DIV>
在同一任务内，实现特权级从外层到内层变换的普通途径是使用段间调用指令CALL，通过调用门进
行转移；实现特权级从内层向外层变换的普通途径是使用段间返回指令RET。注意，不能用JMP指令
实现任务内不同特权级的变换。
</DIV>
<H3>1.通过调用门的转移</H3>
<DIV>
当段间转移指令JMP和段间调用指令CALL所含指针的选择子指示调用门描述符时，就可以实现通过
调用门的转移。但只有CALL指令能变换到内层的特权级，JMP指令只能转移到同级的代码。
</DIV>
<DIV>
调用门描述符转移的入口点包含目标地址的段及偏移量的48位全指针。在执行通过任务门的段间转
移指令JMP或段间调用指令CALL时，<FONT STYLE="color:'#ff0000'">指令所含指针内的选择子用
于确定调用门，而偏移被丢弃；把调用门内的48位全指针作为目标地址指针进行转移</FONT>。
</DIV>
<DIV>
处理器采用与访问数据段相同的特权级规则控制对门描述符的访问。调用门描述符的DPL规定了访
问该门的最外层特权级，在取出调用门内的48位全指针，把它作为目标地址指针向目标代码段转移
之前，要进行特权级检查。只有在相同级或者更内层特权级的程序才可访问调用门，即CPL<=调用
门的DPL。同时，还要求指示门的选择子的RPL必须满足RPL<=<FONT STYLE="color:'#ff0000'">调
用门的DPL</FONT>的条件。检测通过后，才开始向目标代码段转移的步骤。其中还要检测目标描述
符是否为代码段描述符，调用门内的选择子指示的描述符必须是代码段描述符。此外，在装载代码
段描述符高速缓冲寄存器之前调整代码段选择子的RPL=0，也即调用门中代码段选择子的RPL被忽略。
</DIV>
<DIV>
在装载CS高速缓冲寄存器时，还要对目标代码段描述符进行保护检测。检测过程中的DPL不再是调
用门的DPL，而是调用门内选择子所指示的目标代码段描述符的DPL。段间调用指令CALL和段间转移
指令JMP所做的检测不一样。
</DIV>
<DIV>
对于使用调用门的段间转移指令JMP，检测条件与段间直接转移相同。由于已置RPL=0，所以可认为
RPL<=DPL的条件总能满足。所以，对于普通的非一致代码段，当CPL=DPL时，发生无特权级变换的
转移；对于一致代码段，在满足CPL>=DPL时也发生无特权级变换的转移；其它情形就引起异常。
</DIV>
<DIV>
对于使用调用门的段间调用指令CALL，情形就不同了。由于已置RPL=0，所以可认为RPL<=DPL的条
件总能满足。对于一致代码段，在满足CPL>=DPL时发生无特权级变换的转移。对于非一致代码段，
当CPL=DPL时，仍发生无特权级变换的转移；当CPL>DPL时，就发生向内层特权级变换的转移，将调
用门中的选择子和偏移装入CS和指令指针EIP中，并使CPL保持等于DPL，同时切换到内层堆栈。
</DIV>
<DIV>
综上所述，使用段间调用指令CALL，通过调用门可以实现从外层程序调用进入内层程序(JMP指令只
能实现无特权级变换的转移)；通过调用门也可实现无特权级变换的转移。需要注意的是，JMP指令
和CALL指令都不能实现向外层特权级的转移否则会引起异常。
</DIV>
<DIV>
当然，CALL指令在最后把目标代码段的指针装入CS和EIP之前，要把原CS和EIP，即返回地址保存到
堆栈。如无特权级变换，堆栈保持不变，返回地址就保存在原堆栈中；否则，返回地址保存在内层
堆栈中。
</DIV>
<H3>2.堆栈切换</H3>
<DIV>
在使用CALL指令通过调用门向内层转移时，不仅特权级发生变换，控制转移到一个新的代码段，而
且也切换到内层的堆栈段。从本教程第五篇的任务状态段TSS的格式可见，TSS中包含有指
向0级、1级和2级堆栈的指针。在特权级发生向内层变换时，根据变换到的特权级使用TSS中相应的
堆栈指针对SS及ESP寄存器进行初始化，建立起一个空栈。
</DIV>
<DIV>
在建立起内层堆栈后，处理器先把外层堆栈的指针SS及ESP寄存器的值压入内层堆栈，以使得相应
的向外层返回可恢复原来的外层堆栈。然后，从外层堆栈复制以双字为单位的调用参数到内层堆栈
中，调用门中的DCOUNT字段值决定了复制参数的数量。这些被复制的参数是主程序通过堆栈传递给
子程序的实参，在调用之前被压入外层堆栈。通过复制栈中的参数，使内层的子程序不需要考虑堆
栈的切换，而容易地访问主程序传递过来的实参。最后，调用的返回地址被压入堆栈，以便在调用
结束时返回。下图为在向内层变换时，建立内层堆栈，并从外层堆栈复制2个双字参数到内层堆栈
的示意图。图中每项是双字，可见的段寄存器内的选择子被扩展成32为存入堆栈，高16位为0。对
于16位的使用调用门的段也是如此。
</DIV>
<CENTER><IMG SRC="../GIF/stack.gif"></CENTER>
<DIV>
需要注意的是，无论是否通过调用门，只要不发生特权级变换，就不会切换堆栈。
</DIV>
<H3>3.向外层返回</H3>
<DIV>
与使用CALL指令通过调用门向内层变换相反，使用RET指令实现向外层返回。段间返回指令RET从
堆栈中弹出返回地址，并且可以采用调整ESP的方法，跳过相应的在调用之前压入堆栈的参数。返
回地址的选择子指示要返回的代码段的描述符，从而确定返回的代码段。选择子的RPL确定返回后
的特权级，而不是对应描述符的DPL，这是因为，段间返回指令RET可能使控制返回到一致代码段，
而一致代码段可以在DPL规定的特权级以外的特权级执行。需要注意的是，RET指令所使用的返回
地址的选择子只能使用代码段描述符，而不能使用任何系统段描述符或门描述符，当然，更不能
使用数据段描述符，否则会引起异常。与CALL指令相对应，RET指令也不能向内层返回。
</DIV>
<DIV>
段间返回指令完成返回的步骤如下：
</DIV>
<DIV>
(1)RET指令先从堆栈中弹出返回地址。如果弹出地址的选择子的RPL规定相对于CPL更外层的特权
级，那么就引起向外层返回。
</DIV>
<DIV>
(2)为向外层返回，跳过内层堆栈中的参数，再从内层栈中弹出指向外层堆栈的指针，并装入SS及
ESP，以恢复外层堆栈。
</DIV>
<DIV>
(3)调整ESP，跳过在相应的调用之前压入到外层堆栈的参数。即返回指令不但弹出内层栈的参数，
而且也弹出外层栈的参数。
</DIV>
<DIV>
(4)然后，检查数据段寄存器DS、ES、FS及GS，以保证寻址的段在外层是可访问的，如果段寄存器
寻址的段在外层是不可访问的，那么装入一个空选择子，以避免在返回时发生保护空洞。
</DIV>
<DIV>
(5)返回外层继续执行。
</DIV>
<DIV>
上述五步是对带立即数的段间返回指令而言的，立即数规定了堆栈中要跳过的参数的字节数。对于
无立即数的段间返回指令缺少第二步和第三步。若RET指令不需要向外层返回，那么就只
有(1)和(5)两步。对于有通过堆栈传递参数的子程序，必须使用带立即数的返回指令返回，否则返
回时会装载错误的外层栈指针。
</DIV>
<DIV>
若不使用带立即数的返回指令，可以在返回前把外层栈的栈指针存入内层栈中的用于保存返回地址
上方两个双字的区域中，由外层返回的过程可知，这可正确恢复外层栈的指针，但在外层程序中，
必须人为调整外层栈指针，以便废除在外层栈中压入的参数。在使用C调用约定的程序中可使用此
方法。但这会增加代码的长度和处理时间，使代码效率变低。正因为如此，在Windows 9X下，新增
加了一种STDCALL的调用约定，它正是为了适应Intel系列处理器的体系结构而产生的。
</DIV>
<H2 STYLE="color:'#009999'">&#60;四&#62;演示任务内特权级变换的实例(实例四)</H2>
<DIV>
下面给出一个演示任务内特权级变换的实例。该实例演示在任务内通过调用门从外层特权级变换到
内层特权级；也演示通过段间返回指令从内层特权级变换到外层特权级；还演示通过调用门的无特
权级变换的转移。实例使用了任务状态段TSS，这是因为任务内特权级变换时要使用的内层堆栈指
针存放在TSS中。
</DIV>
<H3>1.实现步骤</H3>
<DIV>
该实例的实现步骤为：
</DIV>
<DIV>
(1)实方式下初始化；
</DIV>
<DIV>
(2)切换到保护模式；
</DIV>
<DIV>
(3)设置TR和LDTR。由于在任务内发生特权级变换时要切换堆栈，而内层堆栈的指针存放在当前任
务的TSS中，所以在进入保护模式后设置任务状态段寄存器TR。由于演示任务使用了局部描述符表
，所以设置LDTR；
</DIV>
<DIV>
(4)经调用门进入32位过渡代码段；
</DIV>
<DIV>
(5)建立返回3级演示代码段的环境；
</DIV>
<DIV>
(6)利用RET指令转移到3级的演示代码段。为了演示外层程序通过调用门调用内层程序，要
使CPL>0。实例先通过段间返回指令RET从特权级0变换到特权级3的演示代码段。在特权级3下，
通过调用门调用1级的子程序。随着执行段间返回指令RET，又回到3级的演示代码段；
</DIV>
<DIV>
(7)在3级的演示代码段中，经调用门转移到0级的32位过渡代码段；
</DIV>
<DIV>
(8)直接转0级的临时代码段；
</DIV>
<DIV>
(9)准备返回实模式；
</DIV>
<DIV>
(10)切换回实模式；
</DIV>
<DIV>
(11)实模式下的恢复工作。
</DIV>
<H3>2.源程序组织和清单</H3>
<DIV>
实例四由如下部分组成：
</DIV>
<DIV>
(1)全局描述符表GDT。GDT含有演示任务的TSS段描述符和LDT段描述符，此外还含有临时代码段
的描述符、规范数据段描述符和视频缓冲区段描述符。
</DIV>
<DIV>
(2)演示任务的LDT段。它含有除临时代码段外的其它代码段的描述符和演示任务各级堆栈段描
述符，还含有3个调用门。
</DIV>
<DIV>
(3)演示任务的TSS段。
</DIV>
<DIV>
(4)演示任务的0级、1级和3级堆栈段。
</DIV>
<DIV>
(5)显示子程序段。32位代码段，特权级1。
</DIV>
<DIV>
(6)演示代码段。32位代码段，特权级3。
</DIV>
<DIV>
(7)过渡代码段。32位段，特权级0。
</DIV>
<DIV>
(8)临时代码段。16位段，特权级0。
</DIV>
<DIV>
(9)实模式下的数据和代码段。
</DIV>
<DIV>
该实例的逻辑功能是显示演示代码段执行时的当前特权级CPL。源程序清单如下：
</DIV>
<PRE>
<FONT CLASS=comment>;名称:ASM4.ASM</FONT>
<FONT CLASS=comment>;功能:演示任务内有特权级变换的转移</FONT>
<FONT CLASS=comment>;编译:TASM ASM4.ASM</FONT>
<FONT CLASS=comment>;连接:TLINK /32 ASM4.OBJ</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
<FONT CLASS=pseudo>INCLUDE</FONT>         <FONT CLASS=number>386</FONT>SCD<FONT CLASS=symbol>.</FONT><FONT CLASS=instruct>INC</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
GDTSeg          <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>                <FONT CLASS=comment>;全局描述符表数据段(16位)</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
                <FONT CLASS=comment>;全局描述符表</FONT>
GDT             <FONT CLASS=pseudo>LABEL</FONT>   <FONT CLASS=pseudo>BYTE</FONT>
                <FONT CLASS=comment>;空描述符</FONT>
DUMMY           Desc    <FONT CLASS=symbol>&lt;&gt;</FONT>
                <FONT CLASS=comment>;规范段描述符</FONT>
Normal          Desc    <FONT CLASS=symbol>&lt;</FONT><FONT CLASS=number>0ffffh</FONT><FONT CLASS=symbol>,,,</FONT>ATDW<FONT CLASS=symbol>,,&gt;</FONT>
                <FONT CLASS=comment>;视频缓冲区段描述符(DPL=3)</FONT>
VideoBuf        Desc    <FONT CLASS=symbol>&lt;</FONT><FONT CLASS=number>07fffh</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>8000h</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>0bh</FONT><FONT CLASS=symbol>,</FONT>ATDW<FONT CLASS=symbol>+</FONT>DPL3<FONT CLASS=symbol>,,&gt;</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
EFFGDT          <FONT CLASS=pseudo>LABEL</FONT>   <FONT CLASS=pseudo>BYTE</FONT>
                <FONT CLASS=comment>;任务状态段TSS描述符</FONT>
DemoTSS         Desc    <FONT CLASS=symbol>&lt;</FONT>DemoTssLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>DemoTSSSeg<FONT CLASS=symbol>,,</FONT>AT386TSS<FONT CLASS=symbol>,,&gt;</FONT>
                <FONT CLASS=comment>;局部描述符表段的描述符</FONT>
DemoLDTD        Desc    <FONT CLASS=symbol>&lt;</FONT>DemoLDTLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>DemoLDTSeg<FONT CLASS=symbol>,,</FONT>ATLDT<FONT CLASS=symbol>,,&gt;</FONT>
                <FONT CLASS=comment>;临时代码段描述符</FONT>
TempCode        Desc    <FONT CLASS=symbol>&lt;</FONT><FONT CLASS=number>0ffffh</FONT><FONT CLASS=symbol>,</FONT>TempCodeSeg<FONT CLASS=symbol>,,</FONT>ATCE<FONT CLASS=symbol>,,&gt;</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
GDTLen          <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$-</FONT>GDT                     <FONT CLASS=comment>;全局描述符表长度</FONT>
GDNum           <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>($-</FONT>EFFGDT<FONT CLASS=symbol>)/(</FONT><FONT CLASS=pseudo>SIZE</FONT> Desc<FONT CLASS=symbol>)</FONT>    <FONT CLASS=comment>;需特殊处理的描述符数</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
Normal_Sel      <FONT CLASS=symbol>=</FONT>       Normal<FONT CLASS=symbol>-</FONT>GDT                <FONT CLASS=comment>;规范段描述符选择子</FONT>
Video_Sel       <FONT CLASS=symbol>=</FONT>       VideoBuf<FONT CLASS=symbol>-</FONT>GDT              <FONT CLASS=comment>;视频缓冲区段描述符选择子</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoTSS_Sel     <FONT CLASS=symbol>=</FONT>       DemoTSS<FONT CLASS=symbol>-</FONT>GDT               <FONT CLASS=comment>;任务状态段描述符选择子</FONT>
DemoLDT_Sel     <FONT CLASS=symbol>=</FONT>       DemoLDTD<FONT CLASS=symbol>-</FONT>GDT              <FONT CLASS=comment>;局部描述符表段的选择子</FONT>
TempCode_Sel    <FONT CLASS=symbol>=</FONT>       TempCode<FONT CLASS=symbol>-</FONT>GDT              <FONT CLASS=comment>;临时代码段的选择子</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
GDTSeg          <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;全局描述符表段定义结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoLDTSeg      <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>                <FONT CLASS=comment>;局部描述符表数据段(16位)</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoLDT         <FONT CLASS=pseudo>LABEL</FONT>   <FONT CLASS=pseudo>BYTE</FONT>                      <FONT CLASS=comment>;局部描述符表</FONT>
                <FONT CLASS=comment>;0级堆栈段描述符(32位段)</FONT>
DemoStack0      Desc    <FONT CLASS=symbol>&lt;</FONT>DemoStack0Len<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>DemoStack0Seg<FONT CLASS=symbol>,,</FONT>ATDW<FONT CLASS=symbol>+</FONT>DPL0<FONT CLASS=symbol>,</FONT>D32<FONT CLASS=symbol>,&gt;</FONT>
                <FONT CLASS=comment>;1级堆栈段描述符(32位段)</FONT>
DemoStack1      Desc    <FONT CLASS=symbol>&lt;</FONT>DemoStack1Len<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>DemoStack1Seg<FONT CLASS=symbol>,,</FONT>ATDW<FONT CLASS=symbol>+</FONT>DPL1<FONT CLASS=symbol>,</FONT>D32<FONT CLASS=symbol>,&gt;</FONT>
                <FONT CLASS=comment>;3级堆栈段描述符(16位段)</FONT>
DemoStack3      Desc    <FONT CLASS=symbol>&lt;</FONT>DemoStack3Len<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>DemoStack3Seg<FONT CLASS=symbol>,,</FONT>ATDW<FONT CLASS=symbol>+</FONT>DPL3<FONT CLASS=symbol>,,&gt;</FONT>
                <FONT CLASS=comment>;代码段描述符(32位段,DPL=3)</FONT>
DemoCode        Desc    <FONT CLASS=symbol>&lt;</FONT>DemoCodeLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>DemoCodeSeg<FONT CLASS=symbol>,,</FONT>ATCE<FONT CLASS=symbol>+</FONT>DPL3<FONT CLASS=symbol>,</FONT>D32<FONT CLASS=symbol>,&gt;</FONT>
                <FONT CLASS=comment>;过渡代码段描述符(32位段)</FONT>
T32Code         Desc    <FONT CLASS=symbol>&lt;</FONT>T32CodeLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>T32CodeSeg<FONT CLASS=symbol>,,</FONT>ATCE<FONT CLASS=symbol>,</FONT>D32<FONT CLASS=symbol>,&gt;</FONT>
                <FONT CLASS=comment>;显示子程序代码段描述符(32位段,DPL=1)</FONT>
EchoSubR        Desc    <FONT CLASS=symbol>&lt;</FONT>EchoSubRLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>EchoSubRSeg<FONT CLASS=symbol>,,</FONT>ATCER<FONT CLASS=symbol>+</FONT>DPL1<FONT CLASS=symbol>,</FONT>D32<FONT CLASS=symbol>,&gt;</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoLDNum       <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>($-</FONT>DemoLDT<FONT CLASS=symbol>)/(</FONT><FONT CLASS=pseudo>SIZE</FONT> Desc<FONT CLASS=symbol>)</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
                <FONT CLASS=comment>;0级堆栈描述符选择子(RPL=0)</FONT>
DemoStack0_Sel  <FONT CLASS=symbol>=</FONT>       DemoStack0<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL<FONT CLASS=symbol>+</FONT>RPL0
                <FONT CLASS=comment>;1级堆栈描述符选择子(RPL=1)</FONT>
DemoStack1_Sel  <FONT CLASS=symbol>=</FONT>       DemoStack1<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL<FONT CLASS=symbol>+</FONT>RPL1
                <FONT CLASS=comment>;3级堆栈描述符选择子(RPL=3)</FONT>
DemoStack3_Sel  <FONT CLASS=symbol>=</FONT>       DemoStack3<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL<FONT CLASS=symbol>+</FONT>RPL3
                <FONT CLASS=comment>;代码段描述符选择子(RPL=3)</FONT>
DemoCode_Sel    <FONT CLASS=symbol>=</FONT>       DemoCode<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL<FONT CLASS=symbol>+</FONT>RPL3
                <FONT CLASS=comment>;过渡代码段描述符选择子</FONT>
T32Code_Sel     <FONT CLASS=symbol>=</FONT>       T32Code<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL
                <FONT CLASS=comment>;显示子程序代码段描述符选择子(RPL=1)</FONT>
Echo_Sel1       <FONT CLASS=symbol>=</FONT>       EchoSubR<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL<FONT CLASS=symbol>+</FONT>RPL1
                <FONT CLASS=comment>;显示子程序代码段描述符选择子(RPL=3)</FONT>
Echo_Sel3       <FONT CLASS=symbol>=</FONT>       EchoSubR<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL<FONT CLASS=symbol>+</FONT>RPL3
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
                <FONT CLASS=comment>;指向过渡代码段内T32Begin点的调用门(DPL=0)</FONT>
ToT32GateA      Gate    <FONT CLASS=symbol>&lt;</FONT>T32Begin<FONT CLASS=symbol>,</FONT>T32Code_Sel<FONT CLASS=symbol>,,</FONT>AT386CGate<FONT CLASS=symbol>,&gt;</FONT>
                <FONT CLASS=comment>;指向过渡代码段内T32End点的调用门(DPL=3)</FONT>
ToT32GateB      Gate    <FONT CLASS=symbol>&lt;</FONT>T32End<FONT CLASS=symbol>,</FONT>T32Code_Sel<FONT CLASS=symbol>,,</FONT>AT386CGate<FONT CLASS=symbol>+</FONT>DPL3<FONT CLASS=symbol>,&gt;</FONT>
                <FONT CLASS=comment>;指向显示子程序代码段的调用门(DPL=3)</FONT>
ToEchoGate      Gate    <FONT CLASS=symbol>&lt;</FONT>EchoSub<FONT CLASS=symbol>,</FONT>Echo_Sel3<FONT CLASS=symbol>,,</FONT>AT386CGate<FONT CLASS=symbol>+</FONT>DPL3<FONT CLASS=symbol>,&gt;</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoLDTLen      <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$-</FONT>DemoLDT
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
                <FONT CLASS=comment>;指向过渡代码段内T32Begin点的调用门的选择子</FONT>
ToT32A_Sel      <FONT CLASS=symbol>=</FONT>       ToT32GateA<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL
                <FONT CLASS=comment>;指向过渡代码段内T32End点的调用门的选择子</FONT>
ToT32B_Sel      <FONT CLASS=symbol>=</FONT>       ToT32GateB<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL
                <FONT CLASS=comment>;显示子程序调用门的选择子</FONT>
ToEcho_Sel      <FONT CLASS=symbol>=</FONT>       ToEchoGate<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoLDTSeg      <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;局部描述符表段定义结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoTSSSeg      <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>                <FONT CLASS=comment>;任务状态段TSS</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;Back</FONT>
                <FONT CLASS=pseudo>DD</FONT>      DemoStack0Len             <FONT CLASS=comment>;0级堆栈指针</FONT>
                <FONT CLASS=pseudo>DD</FONT>      DemoStack0_Sel            <FONT CLASS=comment>;初始化</FONT>
                <FONT CLASS=pseudo>DD</FONT>      DemoStack1Len             <FONT CLASS=comment>;1级堆栈指针</FONT>
                <FONT CLASS=pseudo>DD</FONT>      DemoStack1_Sel            <FONT CLASS=comment>;初始化</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;2级堆栈指针</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;未初始化</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;CR3</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;EIP</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;EFLAGS</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;EAX</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;ECX</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;EDX</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;EBX</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;ESP</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;EBP</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;ESI</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;EDI</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;ES</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;CS</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;SS</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;DS</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;FS</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;GS</FONT>
                <FONT CLASS=pseudo>DD</FONT>      DemoLDT_Sel               <FONT CLASS=comment>;LDT</FONT>
                <FONT CLASS=pseudo>DW</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;调试陷阱标志</FONT>
                <FONT CLASS=pseudo>DW</FONT>      <FONT CLASS=symbol>$+</FONT><FONT CLASS=number>2</FONT>                       <FONT CLASS=comment>;指向I/O许可位图</FONT>
                <FONT CLASS=pseudo>DW</FONT>      <FONT CLASS=number>0ffffh</FONT>                    <FONT CLASS=comment>;I/O许可位图结束标志</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoTSSLen      <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoTSSSeg      <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;任务状态段TSS结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoStack0Seg   <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>DWORD</FONT> <FONT CLASS=pseudo>STACK</FONT> <FONT CLASS=pseudo>USE32</FONT>         <FONT CLASS=comment>;0级堆栈段(32位段)</FONT>
DemoStack0Len   <FONT CLASS=symbol>=</FONT>       <FONT CLASS=number>512</FONT>
                <FONT CLASS=pseudo>DB</FONT>      DemoStack0Len <FONT CLASS=pseudo>DUP</FONT><FONT CLASS=symbol>(?)</FONT>
DemoStack0Seg   <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;0级堆栈段结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoStack1Seg   <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>DWORD</FONT> <FONT CLASS=pseudo>STACK</FONT> <FONT CLASS=pseudo>USE32</FONT>         <FONT CLASS=comment>;1级堆栈段(32位段)</FONT>
DemoStack1Len   <FONT CLASS=symbol>=</FONT>       <FONT CLASS=number>512</FONT>
                <FONT CLASS=pseudo>DB</FONT>      DemoStack1Len <FONT CLASS=pseudo>DUP</FONT><FONT CLASS=symbol>(?)</FONT>
DemoStack1Seg   <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;1级堆栈段结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoStack3Seg   <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>DWORD</FONT> <FONT CLASS=pseudo>STACK</FONT> <FONT CLASS=pseudo>USE16</FONT>         <FONT CLASS=comment>;3级堆栈段(16位段)</FONT>
DemoStack3Len   <FONT CLASS=symbol>=</FONT>       <FONT CLASS=number>512</FONT>
                <FONT CLASS=pseudo>DB</FONT>      DemoStack3Len <FONT CLASS=pseudo>DUP</FONT><FONT CLASS=symbol>(?)</FONT>
DemoStack3Seg   <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;3级堆栈段结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
EchoSubRSeg     <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE32</FONT>                <FONT CLASS=comment>;显示子程序代码段(32位,1级)</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>CS</FONT>:EchoSubRSeg
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
Message         <FONT CLASS=pseudo>DB</FONT>      <FONT CLASS=string>'CPL='</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>                  <FONT CLASS=comment>;显示信息(该代码段可读)</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
EchoSub         <FONT CLASS=pseudo>PROC</FONT>    <FONT CLASS=pseudo>FAR</FONT>
                <FONT CLASS=instruct>cld</FONT>
                <FONT CLASS=instruct>push</FONT>    <FONT CLASS=register>ebp</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ebp</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>esp</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>Echo_Sel1              <FONT CLASS=comment>;该代码段是可读段</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ds</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>                     <FONT CLASS=comment>;采用RPL=1的选择子</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>Video_Sel
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>es</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>edi</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>1996</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>esi</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>OFFSET</FONT> Message
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ah</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4eh</FONT>                    <FONT CLASS=comment>;置显示属性(红底黄字)</FONT>
<FONT CLASS=label>EchoSub1:</FONT>       <FONT CLASS=instruct>lodsb</FONT>
                <FONT CLASS=instruct>or</FONT>      <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>al</FONT>
                <FONT CLASS=instruct>jz</FONT>      EchoSub2
                <FONT CLASS=instruct>stosw</FONT>
                <FONT CLASS=instruct>jmp</FONT>     EchoSub1
<FONT CLASS=label>EchoSub2:</FONT>       <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,[</FONT><FONT CLASS=register>ebp</FONT><FONT CLASS=symbol>+</FONT><FONT CLASS=number>8</FONT><FONT CLASS=symbol>]</FONT>               <FONT CLASS=comment>;从堆栈中取调用程序的选择子</FONT>
                <FONT CLASS=instruct>and</FONT>     <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>3</FONT>                      <FONT CLASS=comment>;调用程序的CPL在CS的RPL字段</FONT>
                <FONT CLASS=instruct>add</FONT>     <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=string>'0'</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ah</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4eh</FONT>                    <FONT CLASS=comment>;置显示属性(红底黄字)</FONT>
                <FONT CLASS=instruct>stosw</FONT>
                <FONT CLASS=instruct>pop</FONT>     <FONT CLASS=register>ebp</FONT>
                <FONT CLASS=instruct>retf</FONT>
EchoSub         <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
EchoSubRLen     <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
EchoSubRSeg     <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;显示子程序代码段结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoCodeSeg     <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE32</FONT>                <FONT CLASS=comment>;32位代码段(3级)</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>CS</FONT>:DemoCodeSeg
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoBegin       <FONT CLASS=pseudo>PROC</FONT>    <FONT CLASS=pseudo>FAR</FONT>
                <FONT CLASS=macro>CALL32</FONT>  ToEcho_Sel<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>              <FONT CLASS=comment>;显示当前特权级(变换到1级)</FONT>
                <FONT CLASS=macro>CALL32</FONT>  ToT32B_Sel<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>              <FONT CLASS=comment>;转到过渡代码段(变换到0级)</FONT>
DemoBegin       <FONT CLASS=pseudo>ENDP</FONT>
DemoCodeLen     <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoCodeSeg     <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;32位代码段结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
T32CodeSeg      <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE32</FONT>                <FONT CLASS=comment>;32位过渡代码段(0级)</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>CS</FONT>:T32CodeSeg
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
T32Begin        <FONT CLASS=pseudo>PROC</FONT>    <FONT CLASS=pseudo>FAR</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>DemoStack0_Sel         <FONT CLASS=comment>;建立0级堆栈</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ss</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>esp</FONT><FONT CLASS=symbol>,</FONT>DemoStack0Len
                <FONT CLASS=instruct>push</FONT>    <FONT CLASS=pseudo>DWORD</FONT> <FONT CLASS=pseudo>PTR</FONT> DemoStack3_Sel  <FONT CLASS=comment>;压入3级堆栈指针</FONT>
                <FONT CLASS=instruct>push</FONT>    DemoStack3Len
                <FONT CLASS=instruct>push</FONT>    <FONT CLASS=pseudo>DWORD</FONT> <FONT CLASS=pseudo>PTR</FONT> DemoCode_SEL    <FONT CLASS=comment>;压入入口点</FONT>
                <FONT CLASS=instruct>push</FONT>    <FONT CLASS=pseudo>OFFSET</FONT> DemoBegin
                <FONT CLASS=instruct>retf</FONT>                              <FONT CLASS=comment>;利用RET实现转3级的演示代码</FONT>
T32Begin        <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
T32End          <FONT CLASS=pseudo>PROC</FONT>    <FONT CLASS=pseudo>FAR</FONT>
                <FONT CLASS=macro>JUMP32</FONT>  TempCode_Sel<FONT CLASS=symbol>,&lt;</FONT><FONT CLASS=pseudo>OFFSET</FONT> ToReal<FONT CLASS=symbol>&gt;</FONT>
T32End          <FONT CLASS=pseudo>ENDP</FONT>
T32CodeLen      <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
T32CodeSeg      <FONT CLASS=pseudo>ENDS</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
TempCodeSeg     <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>                <FONT CLASS=comment>;16位临时代码段(0级)</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>CS</FONT>:TempCodeSeg
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
Virtual         <FONT CLASS=pseudo>PROC</FONT>    <FONT CLASS=pseudo>FAR</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>DemoTSS_Sel            <FONT CLASS=comment>;装载TR</FONT>
                <FONT CLASS=instruct>ltr</FONT>     <FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>DemoLDT_Sel            <FONT CLASS=comment>;装载LDTR</FONT>
                <FONT CLASS=instruct>lldt</FONT>    <FONT CLASS=register>ax</FONT>
                <FONT CLASS=macro>JUMP16</FONT>  ToT32A_Sel<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>              <FONT CLASS=comment>;通过调用门转过渡段</FONT>
<FONT CLASS=label>ToReal:</FONT>         <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>Normal_Sel             <FONT CLASS=comment>;准备切换回实模式</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ds</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>es</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>fs</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>gs</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ss</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>cr0</FONT>
                <FONT CLASS=instruct>and</FONT>     <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>11111110b</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>cr0</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>eax</FONT>
                <FONT CLASS=macro>JUMP16</FONT>  <FONT CLASS=symbol>&lt;</FONT><FONT CLASS=pseudo>SEG</FONT> Real<FONT CLASS=symbol>&gt;,&lt;</FONT><FONT CLASS=pseudo>OFFSET</FONT> Real<FONT CLASS=symbol>&gt;</FONT>
Virtual         <FONT CLASS=pseudo>ENDP</FONT>
TempCodeLen     <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
TempCodeSeg     <FONT CLASS=pseudo>ENDS</FONT>
<FONT CLASS=comment>;============================================================================</FONT>
RDataSeg        <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>                <FONT CLASS=comment>;实方式数据段</FONT>
VGDTR           PDesc   <FONT CLASS=symbol>&lt;</FONT>GDTLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,&gt;</FONT>               <FONT CLASS=comment>;GDT伪描述符</FONT>
SPVar           <FONT CLASS=pseudo>DW</FONT>      <FONT CLASS=symbol>?</FONT>                         <FONT CLASS=comment>;用于保存实方式下的SP</FONT>
SSVar           <FONT CLASS=pseudo>DW</FONT>      <FONT CLASS=symbol>?</FONT>                         <FONT CLASS=comment>;用于保存实方式下的SS</FONT>
RDataSeg        <FONT CLASS=pseudo>ENDS</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
RCodeSeg        <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>CS</FONT>:RCodeSeg<FONT CLASS=symbol>,</FONT><FONT CLASS=register>DS</FONT>:RDataSeg
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
Start           <FONT CLASS=pseudo>PROC</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>RDataSeg
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ds</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>cld</FONT>
                <FONT CLASS=instruct>CALL</FONT>    InitGDT                   <FONT CLASS=comment>;初始化全局描述符表GDT</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>DemoLDTSeg
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>fs</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>si</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>OFFSET</FONT> DemoLDT
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>cx</FONT><FONT CLASS=symbol>,</FONT>DemoLDNum
                <FONT CLASS=instruct>CALL</FONT>    InitLDT                   <FONT CLASS=comment>;初始化局部描述符表LDT</FONT>
                <FONT CLASS=instruct>mov</FONT>     SSVar<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ss</FONT>
                <FONT CLASS=instruct>mov</FONT>     SPVar<FONT CLASS=symbol>,</FONT><FONT CLASS=register>sp</FONT>
                <FONT CLASS=instruct>lgdt</FONT>    <FONT CLASS=pseudo>QWORD</FONT> <FONT CLASS=pseudo>PTR</FONT> VGDTR           <FONT CLASS=comment>;装载GDTR并切换到保护方式</FONT>
                <FONT CLASS=instruct>cli</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>cr0</FONT>
                <FONT CLASS=instruct>or</FONT>      <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>1</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>cr0</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>eax</FONT>
                <FONT CLASS=macro>JUMP16</FONT>  <FONT CLASS=symbol>&lt;</FONT>TempCode_Sel<FONT CLASS=symbol>&gt;,&lt;</FONT><FONT CLASS=pseudo>OFFSET</FONT> Virtual<FONT CLASS=symbol>&gt;</FONT>
<FONT CLASS=label>Real:</FONT>           <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>RDataSeg
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ds</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>lss</FONT>     <FONT CLASS=register>sp</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>DWORD</FONT> <FONT CLASS=pseudo>PTR</FONT> SPVar        <FONT CLASS=comment>;又回到实方式</FONT>
                <FONT CLASS=instruct>sti</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4c00h</FONT>
                <FONT CLASS=instruct>int</FONT>     <FONT CLASS=number>21h</FONT>
Start           <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
InitGDT         <FONT CLASS=pseudo>PROC</FONT>
                <FONT CLASS=instruct>push</FONT>    <FONT CLASS=register>ds</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>GDTSeg
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ds</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>cx</FONT><FONT CLASS=symbol>,</FONT>GDNum
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>si</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>OFFSET</FONT> EFFGDT
<FONT CLASS=label>InitG:</FONT>          <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseL
                <FONT CLASS=instruct>movzx</FONT>   <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>shl</FONT>     <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4</FONT>
                <FONT CLASS=instruct>shld</FONT>    <FONT CLASS=register>edx</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>16</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseL<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>BYTE</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseM<FONT CLASS=symbol>,</FONT><FONT CLASS=register>dl</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>BYTE</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseH<FONT CLASS=symbol>,</FONT><FONT CLASS=register>dh</FONT>
                <FONT CLASS=instruct>add</FONT>     <FONT CLASS=register>si</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>SIZE</FONT> Desc
                <FONT CLASS=instruct>loop</FONT>    InitG
                <FONT CLASS=instruct>pop</FONT>     <FONT CLASS=register>ds</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>bx</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>16</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>GDTSeg
                <FONT CLASS=instruct>mul</FONT>     <FONT CLASS=register>bx</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> VGDTR<FONT CLASS=symbol>.</FONT>Base<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> VGDTR<FONT CLASS=symbol>.</FONT>Base<FONT CLASS=symbol>+</FONT><FONT CLASS=number>2</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>dx</FONT>
                <FONT CLASS=instruct>ret</FONT>
InitGDT         <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
<FONT CLASS=comment>;入口参数:FS:SI=第一个要初始化的描述符,CX=要初始化的描述符数</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
InitLDT         <FONT CLASS=pseudo>PROC</FONT>
<FONT CLASS=label>ILDT:</FONT>           <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>FS</FONT>:<FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseL
                <FONT CLASS=instruct>movzx</FONT>   <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>shl</FONT>     <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4</FONT>
                <FONT CLASS=instruct>shld</FONT>    <FONT CLASS=register>edx</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>16</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>fs</FONT>:<FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseL<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>BYTE</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>fs</FONT>:<FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseM<FONT CLASS=symbol>,</FONT><FONT CLASS=register>dl</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>BYTE</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>fs</FONT>:<FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseH<FONT CLASS=symbol>,</FONT><FONT CLASS=register>dh</FONT>
                <FONT CLASS=instruct>add</FONT>     <FONT CLASS=register>si</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>SIZE</FONT> Desc
                <FONT CLASS=instruct>loop</FONT>    ILDT
                <FONT CLASS=instruct>ret</FONT>
InitLDT         <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
RCodeSeg        <FONT CLASS=pseudo>ENDS</FONT>
                <FONT CLASS=pseudo>END</FONT>     Start
</PRE>
<H3>3.关于实例四的说明</H3>
<DIV>
程序中部分片段的背景和实现方法在前面的实例中做过介绍，下面主要就如何实现任务内特权级变换
做些说明：
</DIV>
<H4 CLASS=indent>(1)通过段间返回指令实现特权级变换</H4>
<DIV>
实例在两处使用段间返回指令实现任务内的特权级变换。一处是在0级的过渡代码段中用段间RET指令
从特权级0变换到特权级3的演示代码段。该处RET指令并不对应CALL指令。实例从实模式切换到保护
模式后CPL=0。为了演示如何通过调用门调用内层程序，要设法使CPL>0。为此，实例先建立一个已发
生的从外层到内层变换的环境，即按上图所示在当前堆栈(0级堆栈)中放入外层堆栈的指针和外层演
示程序的入口指针，形成一个如下图所示的0级堆栈，无需传递参数。然后，执行段间返回指令RET，
从堆栈中弹出3级演示代码段的选择子，RPL=3，而当时CPL=0，所以导致向外层变换特权级，从0级的
过渡代码段变换到3级的演示代码段，同时切换到3级堆栈。
</DIV>
<CENTER><IMG SRC="../GIF/ret.gif"></CENTER>
<DIV>
另一处是从1级的显示子程序EchoSub返回到3级的演示程序段。该处的RET指令与演示程序中使用的通
过调用门的段间调用指令CALL相对应，执行段间返回指令RET时的1级堆栈也如上图所示，其中的返回
地址和外层栈指针由CALL指令压入。
</DIV>
<H4 CLASS=indent>(2)通过调用门实现特权级变换</H4>
<DIV>
实例在两处使用了段间调用指令，通过调用门实现特权级的变换。一处是3级演示代码通过调用
门ToEchoGate调用1级的显示子程序。调用门ToEchoGate自身的DPL=3，只有这样，3级的演示代码才
能够使用该调用门。由于调用门内的选择子Echo_Sel3所指示的显示子程序代码段描述符DPL=1，而当
时CPL=3，所以引起从外层特权级向内层特权级的变换，使CPL=1。同时形成如上图所示的1级堆栈。
虽然调用门内的选择子Echo_Sel3的RPL=3，大于目标代码段的DPL，但没有关系，因为在通过调用门
转移时，门内指示目标代码段的选择子RPL总被作0对待。
</DIV>
<DIV>
另一处是3级演示代码还通过调用门ToT32GateB调用了0级的过渡代码。该处使用的调用门描述符DPL也
等于3。由于调用门内的选择子T32Code_Sel所指示的过渡代码段描述符的DPL=0，而当时CPL=3，所以
引起从3特权级向0特权级的变换，使CPL=0。同时形成如上图所示的0级堆栈。但该处的调用实际上是
“有去无回”的，调用的目的是转移到0级的过渡代码，准备返回实模式。由于从3级的演示代码到0级
的过渡代码要发生特权级变换，所以不能使用转移指令JMP，必须使用调用指令CALL。
</DIV>
<H4 CLASS=indent>(3)通过调用门实现无特权级变换</H4>
<DIV>
在临时代码段中，使用调用门ToT32GateA转移到过渡代码段。尽管调用门内的选择子T32Code_Sel所指
示的过渡代码段描述符的DPL=0，但当时CPL=0，所以不发生特权级变换。正是这个原因，才可以使用
段间转移指令JMP。
</DIV>
<H4 CLASS=indent>(4)子程序EchoSub的实现</H4>
<DIV>
子程序EchoSub的功能是显示调用程序执行时的特权级。调用程序的执行特权级在代码段寄存器CS内选
择子的RPL字段，在调用EchoSub时，CS寄存器的内容被压入堆栈。子程序从堆栈取得调用程序的代码
段选择子，再从中分离出RPL就可得调用程序的执行特权级。
</DIV>
<H4 CLASS=indent>(5)装载任务状态段寄存器TR</H4>
<DIV>
在任务内发生特权级变换时堆栈也随着自动切换，外层堆栈指针保存在内层堆栈中，而内层堆栈指针
存放在当前任务的TSS中。所以，在从外层向内层变换时，要访问TSS(从内层向外层转移时不需要访
问TSS，而只需内层栈中保存的栈指针)。实例在进入保护模式下的临时代码段后，通过如下两条指令
装载任务状态段寄存器TR，使其指向已预置好的任务的TSS：
</DIV>
<PRE>
    <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>DemoTSS_Sel
    <FONT CLASS=instruct>ltr</FONT>     <FONT CLASS=register>ax</FONT>
</PRE>
<DIV>
LTR指令是专门用于装载任务状态段寄存器TR的指令。该指令的操作数是对应TSS段描述符的选择
子。LTR指令从GDT中取出相应的TSS段描述符，把TSS段描述符的基地址和界限等信息装入TR的高速
缓冲寄存器中。
</DIV>
<H2 STYLE="color:'#009999'">&#60;五&#62;任务切换</H2>
<DIV>
利用段间转移指令JMP或者段间调用指令CALL，通过任务门或直接通过任务状态段，可以切换到别的
任务。此外，在中断/异常或者执行IRET指令时也可能发生任务切换。需要注意的是，因为RET指令
的目标地址只能使用代码段描述符，所以，不能通过RET指令实现任务切换。
</DIV>
<H3>1.直接通过TSS进行任务切换</H3>
<DIV>
段间转移指令JMP或段间调用指令CALL所含指针的选择子指示一个可用任务状态段TSS描述符时，
正常情况下就发生从当前任务到由该可用TSS对应任务(目标任务)的切换。目标任务的入口点由
目标任务TSS内的CS和EIP字段所规定的指针确定。这样的JMP或CALL指令内的偏移被丢弃。另外，
对于段间调用指令CALL，若目标选择子指示一TSS段描述符或任务门时，则返回地址和外层栈指
针并不压入堆栈。
</DIV>
<DIV>
处理器采用与访问数据段相同的特权级规则控制对TSS段描述符的访问。TSS段描述符的DPL规定
了访问该描述符的最外层特权级，只有在相同级别或更内层级别的程序才可以访问它。同时，还
要求指示它的选择子的RPL必须满足RPL<=TSS的DPL的条件。当这些条件满足时，就开始任务切换。
</DIV>
<H3>2.通过任务门进行任务切换</H3>
<DIV>
任务门内的选择子指示某个任务的TSS描述符。当段间转移指令JMP或段间调用指令CALL所含指针
的选择子指示一个任务门时，正常情况下就发生任务切换，即从当前任务切换到由任务门内的选
择子所指示的TSS描述符对应的任务(目标任务)。这样的JMP或CALL指令内的偏移被丢弃；任务门
内的偏移也无意义。
</DIV>
<DIV>
处理器采用与访问数据段相同的特权级规则控制对任务门的访问。任务门的DPL规定了访问该任
务门的最外层特权级，只有在同级或更内层级别的程序才可以访问它。同时，还要求指示任务门
的选择子RPL必须满足RPL<=任务门的DPL的条件。在这些条件满足时，再检查任务门内的选择子，
要求该选择子指示GDT中的可用的TSS描述符。对于任务门所指向的TSS描述符的DPL不进行特权级
检查。检查通过以后，就开始任务切换。
</DIV>
<H3>3.任务切换过程</H3>
<DIV>
根据指示目标任务TSS描述符的选择子进行任务切换的一般过程如下：
</DIV>
<DIV>
第一，测试目标任务状态段的界限。TSS用于保存任务的各种状态信息，不同的任务，TSS中可以
有数量不等的其他信息，根据任务状态段的基本格式，TSS的界限应大于或等于103(104-1)。
</DIV>
<DIV>
第二，把寄存器现场保存到当前任务的TSS。把通用寄存器、段寄存器、EIP及EFLAGS的当前值保
存到当前TSS中。保存的EIP值是返回地址，指向引起任务切换指令的下一条指令。但不
把LDTR和CR3的内容保存到TSS中。
</DIV>
<DIV>
第三，把指示目标任务TSS的选择子装入TR寄存器中。同时把对应TSS的描述符装入TR的高速缓冲
寄存器中。此后，当前任务改称为原任务，目标任务改称为当前任务。
</DIV>
<DIV>
第四，基本恢复当前任务(目标任务)的寄存器现场。根据保存在TSS中的内容，恢复各通用寄存
器、段寄存器、EFLAGS及EIP。在装入寄存器的过程中，为了能正确地处理可能发生的异常，只
把对应选择子装入各段寄存器。此时选择子的P位为0。还装载CR3寄存器。
</DIV>
<DIV>
第五，进行链接处理。如果需要链接，那么将指向原任务TSS的选择子写入当前任务TSS的链接字
段，把当前任务TSS描述符类型改为“忙”(并不修改原任务状态段描述符的“忙”位)，并将标
志寄存器EFLAGS中的NT位置1，表示是嵌套任务。如果需要解链，那么把原任务TSS描述符类型改
为“可用”。如果无解链处理，那么将原任务TSS描述符类型置为“可用”，当前任务TSS描述符
类型置为“忙”。由于JMP指令引起的任务切换不实施链接/解链处理；由CALL指令、中断、IRET指
令引起的任务切换要实施链接/解链处理。
</DIV>
<DIV>
第六，把CR0中的TS标志置为1，这表示已发生过任务切换，在当前任务使用协处理器指令时，产生
自陷。由自陷处理程序完成有关协处理器现场的保存和恢复。这有利于快速地进行任务切换。
</DIV>
<DIV>
第七，把TSS中的CS选择子的RPL作为当前任务特权级设置为CPL。又因为装入CS高速缓冲寄存器时
要检测CPL=代码段描述符的DPL，所以TSS中的选择子所指示的代码段描述符的DPL必须等于该选择
子的RPL。任务切换可以在一个任务的任何特权级发生，并且可以切换到另一任务的任何特权级。
</DIV>
<DIV>
第八，装载LDTR寄存器。一个任务可以有自己的LDT，也可以没有。当任务没有LDT时，TSS中LDT选
择子为0。如果TSS中LDT选择子非空，则从GDT中读出对应的LDT描述符，在经过测试后，把所读
的LDT描述符装入LDTR高速缓冲寄存器。如果LDT选择子为空，则将LDT的存在位置为0，表明任务不
使用LDT。
</DIV>
<DIV>
第九，装载代码段寄存器CS、堆栈段寄存器SS和各数据段寄存器及其高速缓冲寄存器。在装入代码
段高速缓存之前，也要进行特权检查，处理器调整TSS中的CS选择子的RPL=0，装入之后，调
整CS的RPL等于目标代码段的DPL。堆栈段使用的是TSS中的SS和SP字段的值，而不是使用内层栈保
存区中的指针，即使发生了向内层特权级的变换。这与任务内的通过调用门的转移不同。
</DIV>
<DIV>
第十，把调试寄存器DR7中的局部启用位置为0，以清除局部于原任务的各个断点和方式。
</DIV>
<H3>4.关于任务状态和嵌套的说明</H3>
<DIV>
需要注意的是，任务切换不能递归。
</DIV>
<DIV>
在段间转移指令JMP引起任务切换时，不实施链接，不导致任务的嵌套。它要求目标任务是可用任
务。切换过程中把原任务置为“可用”，目标任务置为“忙”。
</DIV>
<DIV>
在段间调用指令CALL引起任务切换时，实施链接，导致任务的嵌套。它要求目标任务是可用的任务。
在切换过程中把目标任务置为“忙”，原任务仍保持“忙”；标志寄存器EFLAGS中的NT位被置为1，
表示任务是嵌套任务。
</DIV>
<DIV>
在由中断异常引起任务切换时，实施链接，导致任务的嵌套。要求目标任务是可用的任务。在切换
过程中把目标任务置为“忙”，原任务仍保持“忙”；标志寄存器EFLAGS中的NT位被置为1，表示任
务是嵌套任务。
</DIV>
<DIV>
在执行IRET指令时引起任务切换，那么实施解链。要求目标任务是忙的任务。在切换过程中把原任
务置为“可用”，目标任务仍保持“忙”。关于中断/异常如何引起任务切换和指令IRET如何考虑任
务切换的内容将在后面的文章中论述。
</DIV>
<H2 STYLE="color:'#009999'">&#60;六&#62;演示任务切换的实例(实例五)</H2>
<DIV>
下面给出一个用于演示任务切换的实例。该实例的逻辑功能是在切换后显示原任务的挂起点(EIP)的
值。该实例演示内容包括：直接通过TSS段的任务切换，通过任务门的任务切换，任务内特权级的变
换及参数传递。
</DIV>
<H3>1.实现步骤</H3>
<DIV>
为了达到演示任务切换和特权级变换的目的，实例五在保护方式下涉及到两个任务，一个任务称为
临时任务，另一个任务称为演示任务。演示任务的功能是演示通过调用门实现特权级的变换和堆栈
间参数的自动复制。临时任务和演示任务配合展示任务切换。实例五的主要实现步骤如下：
</DIV>
<DIV>
(1)实模式下初始化；
</DIV>
<DIV>
(2)切换到保护模式；
</DIV>
<DIV>
(3)设置TR对应临时任务，特权级为0；
</DIV>
<DIV>
(4)直接切换到演示任务，演示任务的特权级为2；
</DIV>
<DIV>
(5)把入口参数压入堆栈，经调用门进入显示信息子程序，显示信息子程序的特权级为0；
</DIV>
<DIV>
(6)从堆栈中取出入口参数并处理；
</DIV>
<DIV>
(7)从显示信息子程序返回特权级为2的演示代码段；
</DIV>
<DIV>
(8)为切换回实模式作部分准备工作；
</DIV>
<DIV>
(9)经任务门切换到特权级为0的临时任务；
</DIV>
<DIV>
(10)准备返回实模式；
</DIV>
<DIV>
(11)切换到实模式；
</DIV>
<DIV>
(12)实模式下的恢复工作。
</DIV>
<DIV>
在任务切换时，把原任务的现场保存到TR所指示的TSS内，然后再把指向目标任务的TSS描述符的
选择子装入TR，所以在从临时任务切换到演示任务之前，要把指向临时任务TSS描述符的选择子
装入TR。通过把演示任务的TSS初始化成恢复点在特权级2的代码段，使得从临时任务切换到演示
任务后，当前特权级CPL=2。
</DIV>
<H3>2.源程序组织和清单</H3>
<DIV>
实例五由如下部分组成：
</DIV>
<DIV>
(1)全局描述符表GDT。GDT含有演示任务的TSS描述符和LDT段描述符，还含有临时任务TSS描述符
和临时任务的代码段描述符，此外，还含有子程序代码段描述符、规范数据段描述符和视频缓冲
区段描述符。
</DIV>
<DIV>
(2)演示任务的TSS。以根据演示要求初始化。
</DIV>
<DIV>
(3)演示任务的LDT段。它含有演示任务的0级和2级堆栈段描述符、代码段和数据段描述符、分别
以数据段方式描述LDT和临时任务TSS的数据段描述符、以及指向子程序的调用门和指向临时任务
的任务门。
</DIV>
<DIV>
(4)演示任务的0级和2级堆栈段。32位段，特权级分别为0和2。
</DIV>
<DIV>
(5)演示任务数据段。32位段，特权级3。
</DIV>
<DIV>
(6)子程序代码段。32位代码段，特权级0。
</DIV>
<DIV>
(7)演示任务代码段。32位代码段，特权级2。
</DIV>
<DIV>
(8)临时任务的TSS段。未初始化。
</DIV>
<DIV>
(9)临时任务代码段。16位代码段，特权级0。
</DIV>
<DIV>
(10)实模式下的数据和代码段。
</DIV>
<DIV>
该实例的逻辑功能是在切换后显示原任务的挂起点(EIP)的值。源程序清单如下：
</DIV>
<PRE>
<FONT CLASS=comment>;名称:ASM5.ASM</FONT>
<FONT CLASS=comment>;功能:演示任务切换和任务内有特权级变换的转移</FONT>
<FONT CLASS=comment>;编译:TASM ASM5.ASM</FONT>
<FONT CLASS=comment>;链接:TLINK /32 ASM5.OBJ</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
<FONT CLASS=pseudo>INCLUDE</FONT>         <FONT CLASS=number>386</FONT>SCD<FONT CLASS=symbol>.</FONT><FONT CLASS=instruct>INC</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
GDTSeg          <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>                <FONT CLASS=comment>;全局描述符表数据段(16位)</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
                <FONT CLASS=comment>;全局描述符表</FONT>
GDT             <FONT CLASS=pseudo>LABEL</FONT>   <FONT CLASS=pseudo>BYTE</FONT>
                <FONT CLASS=comment>;空描述符</FONT>
DUMMY           Desc    <FONT CLASS=symbol>&lt;&gt;</FONT>
                <FONT CLASS=comment>;规范段描述符及选择子</FONT>
Normal          Desc    <FONT CLASS=symbol>&lt;</FONT><FONT CLASS=number>0ffffh</FONT><FONT CLASS=symbol>,,,</FONT>ATDW<FONT CLASS=symbol>,,&gt;</FONT>
Normal_Sel      <FONT CLASS=symbol>=</FONT>       Normal<FONT CLASS=symbol>-</FONT>GDT
                <FONT CLASS=comment>;视频缓冲区段描述符(DPL=3)及选择子</FONT>
VideoBuf        Desc    <FONT CLASS=symbol>&lt;</FONT><FONT CLASS=number>0ffffh</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>8000h</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>0bh</FONT><FONT CLASS=symbol>,</FONT>ATDW<FONT CLASS=symbol>+</FONT>DPL3<FONT CLASS=symbol>,,&gt;</FONT>
Video_Sel       <FONT CLASS=symbol>=</FONT>       VideoBuf<FONT CLASS=symbol>-</FONT>GDT
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
EFFGDT          <FONT CLASS=pseudo>LABEL</FONT>   <FONT CLASS=pseudo>BYTE</FONT>
                <FONT CLASS=comment>;演示任务的局部描述符表段的描述符及选择子</FONT>
DemoLDTab       Desc    <FONT CLASS=symbol>&lt;</FONT>DemoLDTLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>DemoLDTSeg<FONT CLASS=symbol>,,</FONT>ATLDT<FONT CLASS=symbol>,,&gt;</FONT>
DemoLDT_Sel     <FONT CLASS=symbol>=</FONT>       DemoLDTab<FONT CLASS=symbol>-</FONT>GDT
                <FONT CLASS=comment>;演示任务的任务状态段描述符及选择子</FONT>
DemoTSS         Desc    <FONT CLASS=symbol>&lt;</FONT>DemoTSSLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>DemoTSSSeg<FONT CLASS=symbol>,,</FONT>AT386TSS<FONT CLASS=symbol>,,&gt;</FONT>
DemoTSS_Sel     <FONT CLASS=symbol>=</FONT>       DemoTSS<FONT CLASS=symbol>-</FONT>GDT
                <FONT CLASS=comment>;临时任务的任务状态段描述符及选择子</FONT>
TempTSS         Desc    <FONT CLASS=symbol>&lt;</FONT>TempTSSLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>TempTSSSeg<FONT CLASS=symbol>,,</FONT>AT386TSS<FONT CLASS=symbol>+</FONT>DPL2<FONT CLASS=symbol>,,&gt;</FONT>
TempTSS_Sel     <FONT CLASS=symbol>=</FONT>       TempTSS<FONT CLASS=symbol>-</FONT>GDT
                <FONT CLASS=comment>;临时代码段描述符及选择子</FONT>
TempCode        Desc    <FONT CLASS=symbol>&lt;</FONT><FONT CLASS=number>0ffffh</FONT><FONT CLASS=symbol>,</FONT>TempCodeSeg<FONT CLASS=symbol>,,</FONT>ATCE<FONT CLASS=symbol>,,&gt;</FONT>
TempCode_Sel    <FONT CLASS=symbol>=</FONT>       TempCode<FONT CLASS=symbol>-</FONT>GDT
                <FONT CLASS=comment>;子程序代码段描述符及选择子</FONT>
SubR            Desc    <FONT CLASS=symbol>&lt;</FONT>SubRLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>SubRSeg<FONT CLASS=symbol>,,</FONT>ATCE<FONT CLASS=symbol>,</FONT>D32<FONT CLASS=symbol>,&gt;</FONT>
SubR_Sel        <FONT CLASS=symbol>=</FONT>       SubR<FONT CLASS=symbol>-</FONT>GDT
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
GDNum           <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>($-</FONT>EFFGDT<FONT CLASS=symbol>)/(</FONT><FONT CLASS=pseudo>SIZE</FONT> Desc<FONT CLASS=symbol>)</FONT>    <FONT CLASS=comment>;需处理基地址的描述符个数</FONT>
GDTLen          <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$-</FONT>GDT                     <FONT CLASS=comment>;全局描述符表长度</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
GDTSeg          <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;全局描述符表段定义结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoLDTSeg      <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>                <FONT CLASS=comment>;局部描述符表数据段(16位)</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoLDT         <FONT CLASS=pseudo>LABEL</FONT>   <FONT CLASS=pseudo>BYTE</FONT>                      <FONT CLASS=comment>;局部描述符表</FONT>
                <FONT CLASS=comment>;0级堆栈段描述符(32位段)及选择子</FONT>
DemoStack0      Desc    <FONT CLASS=symbol>&lt;</FONT>DemoStack0Len<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>DemoStack0Seg<FONT CLASS=symbol>,,</FONT>ATDW<FONT CLASS=symbol>,</FONT>D32<FONT CLASS=symbol>,&gt;</FONT>
DemoStack0_Sel  <FONT CLASS=symbol>=</FONT>       DemoStack0<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL
                <FONT CLASS=comment>;2级堆栈段描述符(32位段)及选择子</FONT>
DemoStack2      Desc    <FONT CLASS=symbol>&lt;</FONT>DemoStack2Len<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>DemoStack2Seg<FONT CLASS=symbol>,,</FONT>ATDW<FONT CLASS=symbol>+</FONT>DPL2<FONT CLASS=symbol>,</FONT>D32<FONT CLASS=symbol>,&gt;</FONT>
DemoStack2_Sel  <FONT CLASS=symbol>=</FONT>       DemoStack2<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL<FONT CLASS=symbol>+</FONT>RPL2
                <FONT CLASS=comment>;演示任务代码段描述符(32位段,DPL=2)及选择子</FONT>
DemoCode        Desc    <FONT CLASS=symbol>&lt;</FONT>DemoCodeLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>DemoCodeSeg<FONT CLASS=symbol>,,</FONT>ATCE<FONT CLASS=symbol>+</FONT>DPL2<FONT CLASS=symbol>,</FONT>D32<FONT CLASS=symbol>,&gt;</FONT>
DemoCode_Sel    <FONT CLASS=symbol>=</FONT>       DemoCode<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL<FONT CLASS=symbol>+</FONT>RPL2
                <FONT CLASS=comment>;演示任务数据段描述符(32位段,DPL=3)及选择子</FONT>
DemoData        Desc    <FONT CLASS=symbol>&lt;</FONT>DemoDataLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>DemoDataSeg<FONT CLASS=symbol>,,</FONT>ATDW<FONT CLASS=symbol>+</FONT>DPL3<FONT CLASS=symbol>,</FONT>D32<FONT CLASS=symbol>,&gt;</FONT>
DemoData_Sel    <FONT CLASS=symbol>=</FONT>       DemoData<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL
                <FONT CLASS=comment>;把LDT作为普通数据段描述的描述符(DPL=2)及选择子</FONT>
ToDLDT          Desc    <FONT CLASS=symbol>&lt;</FONT>DemoLDTLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>DemoLDTSeg<FONT CLASS=symbol>,,</FONT>ATDW<FONT CLASS=symbol>+</FONT>DPL2<FONT CLASS=symbol>,,&gt;</FONT>
ToDLDT_Sel      <FONT CLASS=symbol>=</FONT>       ToDLDT<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL
                <FONT CLASS=comment>;把TSS作为普通数据段描述的描述符(DPL=2)及选择子</FONT>
ToTTSS          Desc    <FONT CLASS=symbol>&lt;</FONT>TempTSSLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,</FONT>TempTSSSeg<FONT CLASS=symbol>,,</FONT>ATDW<FONT CLASS=symbol>+</FONT>DPL2<FONT CLASS=symbol>,,&gt;</FONT>
ToTTSS_Sel      <FONT CLASS=symbol>=</FONT>       ToTTSS<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoLDNum       <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>($-</FONT>DemoLDT<FONT CLASS=symbol>)/(</FONT><FONT CLASS=pseudo>SIZE</FONT> Desc<FONT CLASS=symbol>)</FONT>   <FONT CLASS=comment>;需处理基地址的LDT描述符数</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
                <FONT CLASS=comment>;指向子程序SubRB代码段的调用门(DPL=3)及选择子</FONT>
ToSubR          Gate    <FONT CLASS=symbol>&lt;</FONT>SubRB<FONT CLASS=symbol>,</FONT>SubR_Sel<FONT CLASS=symbol>,,</FONT>AT386CGate<FONT CLASS=symbol>+</FONT>DPL3<FONT CLASS=symbol>,&gt;</FONT>
ToSubR_Sel      <FONT CLASS=symbol>=</FONT>       ToSubR<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL<FONT CLASS=symbol>+</FONT>RPL2
                <FONT CLASS=comment>;指向临时任务Temp的任务门(DPL=3)及选择子</FONT>
ToTempT         Gate    <FONT CLASS=symbol>&lt;,</FONT>TempTSS_Sel<FONT CLASS=symbol>,,</FONT>ATTaskGate<FONT CLASS=symbol>+</FONT>DPL3<FONT CLASS=symbol>,&gt;</FONT>
ToTempT_Sel     <FONT CLASS=symbol>=</FONT>       ToTempT<FONT CLASS=symbol>-</FONT>DemoLDT<FONT CLASS=symbol>+</FONT>TIL
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoLDTLen      <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$-</FONT>DemoLDT
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoLDTSeg      <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;局部描述符表段定义结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoTSSSeg      <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>                <FONT CLASS=comment>;任务状态段TSS</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;链接字</FONT>
                <FONT CLASS=pseudo>DD</FONT>      DemoStack0Len             <FONT CLASS=comment>;0级堆栈指针</FONT>
                <FONT CLASS=pseudo>DW</FONT>      DemoStack0_Sel<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>          <FONT CLASS=comment>;0级堆栈选择子</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;1级堆栈指针(实例不使用)</FONT>
                <FONT CLASS=pseudo>DW</FONT>      <FONT CLASS=number>0</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>                       <FONT CLASS=comment>;1级堆栈选择子(实例不使用)</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;2级堆栈指针</FONT>
                <FONT CLASS=pseudo>DW</FONT>      <FONT CLASS=number>0</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>                       <FONT CLASS=comment>;2级堆栈选择子</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;CR3</FONT>
                <FONT CLASS=pseudo>DW</FONT>      DemoBegin<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>               <FONT CLASS=comment>;EIP</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;EFLAGS</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;EAX</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;ECX</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;EDX</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;EBX</FONT>
                <FONT CLASS=pseudo>DD</FONT>      DemoStack2Len             <FONT CLASS=comment>;ESP</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;EBP</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;ESI</FONT>
                <FONT CLASS=pseudo>DD</FONT>      <FONT CLASS=number>1986</FONT>                      <FONT CLASS=comment>;EDI</FONT>
                <FONT CLASS=pseudo>DW</FONT>      Video_Sel<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>               <FONT CLASS=comment>;ES</FONT>
                <FONT CLASS=pseudo>DW</FONT>      DemoCode_Sel<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>            <FONT CLASS=comment>;CS</FONT>
                <FONT CLASS=pseudo>DW</FONT>      DemoStack2_Sel<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>          <FONT CLASS=comment>;SS</FONT>
                <FONT CLASS=pseudo>DW</FONT>      DemoData_Sel<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>            <FONT CLASS=comment>;DS</FONT>
                <FONT CLASS=pseudo>DW</FONT>      ToDLDT_Sel<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>              <FONT CLASS=comment>;FS</FONT>
                <FONT CLASS=pseudo>DW</FONT>      ToTTSS_Sel<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>              <FONT CLASS=comment>;GS</FONT>
                <FONT CLASS=pseudo>DW</FONT>      DemoLDT_Sel<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>             <FONT CLASS=comment>;LDTR</FONT>
                <FONT CLASS=pseudo>DW</FONT>      <FONT CLASS=number>0</FONT>                         <FONT CLASS=comment>;调试陷阱标志</FONT>
                <FONT CLASS=pseudo>DW</FONT>      <FONT CLASS=symbol>$+</FONT><FONT CLASS=number>2</FONT>                       <FONT CLASS=comment>;指向I/O许可位图</FONT>
                <FONT CLASS=pseudo>DB</FONT>      <FONT CLASS=number>0ffh</FONT>                      <FONT CLASS=comment>;I/O许可位图结束标志</FONT>
DemoTSSLen      <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoTSSSeg      <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;任务状态段TSS结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoStack0Seg   <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE32</FONT>                <FONT CLASS=comment>;演示任务0级堆栈段(32位段)</FONT>
DemoStack0Len   <FONT CLASS=symbol>=</FONT>       <FONT CLASS=number>1024</FONT>
                <FONT CLASS=pseudo>DB</FONT>      DemoStack0Len <FONT CLASS=pseudo>DUP</FONT><FONT CLASS=symbol>(</FONT><FONT CLASS=number>0</FONT><FONT CLASS=symbol>)</FONT>
DemoStack0Seg   <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;演示任务0级堆栈段结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoStack2Seg   <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE32</FONT>               <FONT CLASS=comment>;演示任务2级堆栈段(32位段)</FONT>
DemoStack2Len   <FONT CLASS=symbol>=</FONT>       <FONT CLASS=number>512</FONT>
                <FONT CLASS=pseudo>DB</FONT>      DemoStack2Len <FONT CLASS=pseudo>DUP</FONT><FONT CLASS=symbol>(</FONT><FONT CLASS=number>0</FONT><FONT CLASS=symbol>)</FONT>
DemoStack2Seg   <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;演示任务2级堆栈段结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoDataSeg     <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE32</FONT>                <FONT CLASS=comment>;演示任务数据段(32位段)</FONT>
Message         <FONT CLASS=pseudo>DB</FONT>      <FONT CLASS=string>'Value='</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>
DemoDataLen     <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
DemoDataSeg     <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;演示任务数据段结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
SubRSeg         <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE32</FONT>                <FONT CLASS=comment>;子程序代码段(32位)</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>CS</FONT>:SubRSeg
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
SubRB           <FONT CLASS=pseudo>PROC</FONT>    <FONT CLASS=pseudo>FAR</FONT>
                <FONT CLASS=instruct>push</FONT>    <FONT CLASS=register>ebp</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ebp</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>esp</FONT>
                <FONT CLASS=instruct>pushad</FONT>                            <FONT CLASS=comment>;保护现场</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>esi</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>DWORD</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=symbol>[</FONT><FONT CLASS=register>ebp</FONT><FONT CLASS=symbol>+</FONT><FONT CLASS=number>12</FONT><FONT CLASS=symbol>]</FONT>    <FONT CLASS=comment>;从0级栈中取出显示串偏移</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ah</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4ah</FONT>                    <FONT CLASS=comment>;设置显示属性</FONT>
                <FONT CLASS=instruct>jmp</FONT>     <FONT CLASS=pseudo>SHORT</FONT> SubR2
<FONT CLASS=label>SubR1:</FONT>          <FONT CLASS=instruct>stosw</FONT>
<FONT CLASS=label>SubR2:</FONT>          <FONT CLASS=instruct>lodsb</FONT>
                <FONT CLASS=instruct>or</FONT>      <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>al</FONT>
                <FONT CLASS=instruct>jnz</FONT>     SubR1
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ah</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4eh</FONT>                    <FONT CLASS=comment>;设置显示属性</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>edx</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>DWORD</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=symbol>[</FONT><FONT CLASS=register>ebp</FONT><FONT CLASS=symbol>+</FONT><FONT CLASS=number>16</FONT><FONT CLASS=symbol>]</FONT>    <FONT CLASS=comment>;从0级栈中取出显示值</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ecx</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>8</FONT>
<FONT CLASS=label>SubR3:</FONT>          <FONT CLASS=instruct>rol</FONT>     <FONT CLASS=register>edx</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>dl</FONT>
                <FONT CLASS=instruct>call</FONT>    HToASCII
                <FONT CLASS=instruct>stosw</FONT>
                <FONT CLASS=instruct>loop</FONT>    SubR3
                <FONT CLASS=instruct>popad</FONT>
                <FONT CLASS=instruct>pop</FONT>     <FONT CLASS=register>ebp</FONT>
                <FONT CLASS=instruct>ret</FONT>     <FONT CLASS=number>8</FONT>
SubRB           <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
HToASCII        <FONT CLASS=pseudo>PROC</FONT>
                <FONT CLASS=instruct>and</FONT>     <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>0fh</FONT>
                <FONT CLASS=instruct>add</FONT>     <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>90h</FONT>
                <FONT CLASS=instruct>daa</FONT>
                <FONT CLASS=instruct>adc</FONT>     <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>40h</FONT>
                <FONT CLASS=instruct>daa</FONT>
                <FONT CLASS=instruct>ret</FONT>
HToASCII        <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
SubRLen         <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
SubRSeg         <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;子程序代码段结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoCodeSeg     <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE32</FONT>                <FONT CLASS=comment>;演示任务的32位代码段</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>CS</FONT>:DemoCodeSeg<FONT CLASS=symbol>,</FONT><FONT CLASS=register>DS</FONT>:DemoDataSeg
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoBegin       <FONT CLASS=pseudo>PROC</FONT>    <FONT CLASS=pseudo>FAR</FONT>
                <FONT CLASS=comment>;把要复制的参数个数置入调用门</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>BYTE</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>fs</FONT>:ToSubR<FONT CLASS=symbol>.</FONT>DCount<FONT CLASS=symbol>,</FONT><FONT CLASS=number>2</FONT>
                <FONT CLASS=comment>;向2级堆栈中压入参数</FONT>
                <FONT CLASS=instruct>push</FONT>    <FONT CLASS=pseudo>DWORD</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>gs</FONT>:TempTask<FONT CLASS=symbol>.</FONT>TREIP
                <FONT CLASS=instruct>push</FONT>    <FONT CLASS=pseudo>OFFSET</FONT> Message
                <FONT CLASS=comment>;通过调用门调用SubRB</FONT>
                <FONT CLASS=macro>CALL32</FONT>  ToSubR_Sel<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>
                <FONT CLASS=comment>;把指向规范数据段描述符的选择子填入临时任务TSS</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>DS</FONT>:TempTSSSeg
                <FONT CLASS=instruct>push</FONT>    <FONT CLASS=register>gs</FONT>
                <FONT CLASS=instruct>pop</FONT>     <FONT CLASS=register>ds</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>Normal_Sel
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> TempTask<FONT CLASS=symbol>.</FONT>TRDS<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> TempTask<FONT CLASS=symbol>.</FONT>TRES<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> TempTask<FONT CLASS=symbol>.</FONT>TRFS<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> TempTask<FONT CLASS=symbol>.</FONT>TRGS<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> TempTask<FONT CLASS=symbol>.</FONT>TRSS<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=comment>;通过任务门切换到临时任务</FONT>
                <FONT CLASS=macro>JUMP32</FONT>  ToTempT_Sel<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>
                <FONT CLASS=instruct>jmp</FONT>     DemoBegin
DemoBegin       <FONT CLASS=pseudo>ENDP</FONT>
DemoCodeLen     <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
DemoCodeSeg     <FONT CLASS=pseudo>ENDS</FONT>                              <FONT CLASS=comment>;演示任务的32位代码段结束</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
TempTSSSeg      <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>                <FONT CLASS=comment>;临时任务的任务状态段TSS</FONT>
TempTask        TSS     <FONT CLASS=symbol>&lt;&gt;</FONT>
                <FONT CLASS=pseudo>DB</FONT>      <FONT CLASS=number>0ffh</FONT>                      <FONT CLASS=comment>;I/O许可位图结束标志</FONT>
TempTSSLen      <FONT CLASS=symbol>=</FONT>       <FONT CLASS=symbol>$</FONT>
TempTSSSeg      <FONT CLASS=pseudo>ENDS</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
TempCodeSeg     <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>                <FONT CLASS=comment>;临时任务的代码段</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>CS</FONT>:TempCodeSeg
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
Virtual         <FONT CLASS=pseudo>PROC</FONT>    <FONT CLASS=pseudo>FAR</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>TempTSS_Sel            <FONT CLASS=comment>;装载TR</FONT>
                <FONT CLASS=instruct>ltr</FONT>     <FONT CLASS=register>ax</FONT>
                <FONT CLASS=macro>JUMP16</FONT>  DemoTSS_Sel<FONT CLASS=symbol>,</FONT><FONT CLASS=number>0</FONT>             <FONT CLASS=comment>;直接切换到演示任务</FONT>
                <FONT CLASS=instruct>clts</FONT>                              <FONT CLASS=comment>;清任务切换标志</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>cr0</FONT>                   <FONT CLASS=comment>;准备返回实模式</FONT>
                <FONT CLASS=instruct>and</FONT>     <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>11111110b</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>cr0</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>eax</FONT>
                <FONT CLASS=macro>JUMP16</FONT>  <FONT CLASS=symbol>&lt;</FONT><FONT CLASS=pseudo>SEG</FONT> Real<FONT CLASS=symbol>&gt;,&lt;</FONT><FONT CLASS=pseudo>OFFSET</FONT> Real<FONT CLASS=symbol>&gt;</FONT>
Virtual         <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
TempCodeSeg     <FONT CLASS=pseudo>ENDS</FONT>
<FONT CLASS=comment>;============================================================================</FONT>
RDataSeg        <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>                <FONT CLASS=comment>;实方式数据段</FONT>
VGDTR           PDesc   <FONT CLASS=symbol>&lt;</FONT>GDTLen<FONT CLASS=symbol>-</FONT><FONT CLASS=number>1</FONT><FONT CLASS=symbol>,&gt;</FONT>               <FONT CLASS=comment>;GDT伪描述符</FONT>
SPVar           <FONT CLASS=pseudo>DW</FONT>      <FONT CLASS=symbol>?</FONT>                         <FONT CLASS=comment>;用于保存实方式下的SP</FONT>
SSVar           <FONT CLASS=pseudo>DW</FONT>      <FONT CLASS=symbol>?</FONT>                         <FONT CLASS=comment>;用于保存实方式下的SS</FONT>
RDataSeg        <FONT CLASS=pseudo>ENDS</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
RCodeSeg        <FONT CLASS=pseudo>SEGMENT</FONT> <FONT CLASS=pseudo>PARA</FONT> <FONT CLASS=pseudo>USE16</FONT>
                <FONT CLASS=pseudo>ASSUME</FONT>  <FONT CLASS=register>CS</FONT>:RCodeSeg<FONT CLASS=symbol>,</FONT><FONT CLASS=register>DS</FONT>:RDataSeg<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ES</FONT>:RDataSeg
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
Start           <FONT CLASS=pseudo>PROC</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>RDataSeg
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ds</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>cld</FONT>
                <FONT CLASS=instruct>call</FONT>    InitGDT                   <FONT CLASS=comment>;初始化全局描述符表GDT</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>DemoLDTSeg
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>fs</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>si</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>OFFSET</FONT> DemoLDT
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>cx</FONT><FONT CLASS=symbol>,</FONT>DemoLDNum
                <FONT CLASS=instruct>call</FONT>    InitLDT                   <FONT CLASS=comment>;初始化局部描述符表LDT</FONT>
                <FONT CLASS=instruct>mov</FONT>     SSVar<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ss</FONT>
                <FONT CLASS=instruct>mov</FONT>     SPVar<FONT CLASS=symbol>,</FONT><FONT CLASS=register>sp</FONT>
                <FONT CLASS=instruct>lgdt</FONT>    <FONT CLASS=pseudo>QWORD</FONT> <FONT CLASS=pseudo>PTR</FONT> VGDTR           <FONT CLASS=comment>;装载GDTR并切换到保护方式</FONT>
                <FONT CLASS=instruct>cli</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>cr0</FONT>
                <FONT CLASS=instruct>or</FONT>      <FONT CLASS=register>al</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>1</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>cr0</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>eax</FONT>
                <FONT CLASS=macro>JUMP16</FONT>  <FONT CLASS=symbol>&lt;</FONT>TempCode_Sel<FONT CLASS=symbol>&gt;,&lt;</FONT><FONT CLASS=pseudo>OFFSET</FONT> Virtual<FONT CLASS=symbol>&gt;</FONT>
<FONT CLASS=label>Real:</FONT>           <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>RDataSeg
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ds</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>lss</FONT>     <FONT CLASS=register>sp</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>DWORD</FONT> <FONT CLASS=pseudo>PTR</FONT> SPVar        <FONT CLASS=comment>;又回到实方式</FONT>
                <FONT CLASS=instruct>sti</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4c00h</FONT>
                <FONT CLASS=instruct>int</FONT>     <FONT CLASS=number>21h</FONT>
Start           <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
InitGDT         <FONT CLASS=pseudo>PROC</FONT>
                <FONT CLASS=instruct>push</FONT>    <FONT CLASS=register>ds</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>GDTSeg
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ds</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>cx</FONT><FONT CLASS=symbol>,</FONT>GDNum
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>si</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>OFFSET</FONT> EFFGDT
<FONT CLASS=label>InitG:</FONT>          <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseL
                <FONT CLASS=instruct>movzx</FONT>   <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>shl</FONT>     <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4</FONT>
                <FONT CLASS=instruct>shld</FONT>    <FONT CLASS=register>edx</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>16</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseL<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>BYTE</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseM<FONT CLASS=symbol>,</FONT><FONT CLASS=register>dl</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>BYTE</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseH<FONT CLASS=symbol>,</FONT><FONT CLASS=register>dh</FONT>
                <FONT CLASS=instruct>add</FONT>     <FONT CLASS=register>si</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>SIZE</FONT> Desc
                <FONT CLASS=instruct>loop</FONT>    InitG
                <FONT CLASS=instruct>pop</FONT>     <FONT CLASS=register>ds</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>bx</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>16</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT>GDTSeg
                <FONT CLASS=instruct>mul</FONT>     <FONT CLASS=register>bx</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> VGDTR<FONT CLASS=symbol>.</FONT>Base<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> VGDTR<FONT CLASS=symbol>.</FONT>Base<FONT CLASS=symbol>+</FONT><FONT CLASS=number>2</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>dx</FONT>
                <FONT CLASS=instruct>ret</FONT>
InitGDT         <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
<FONT CLASS=comment>;入口参数:FS:SI=第一个要初始化的描述符,CX=要初始化的描述符数</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
InitLDT         <FONT CLASS=pseudo>PROC</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=register>ax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>fs</FONT>:<FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseL
                <FONT CLASS=instruct>movzx</FONT>   <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>shl</FONT>     <FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>4</FONT>
                <FONT CLASS=instruct>shld</FONT>    <FONT CLASS=register>edx</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=register>eax</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=number>16</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>WORD</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>fs</FONT>:<FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseL<FONT CLASS=symbol>,</FONT><FONT CLASS=register>ax</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>BYTE</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>fs</FONT>:<FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseM<FONT CLASS=symbol>,</FONT><FONT CLASS=register>dl</FONT>
                <FONT CLASS=instruct>mov</FONT>     <FONT CLASS=pseudo>BYTE</FONT> <FONT CLASS=pseudo>PTR</FONT> <FONT CLASS=register>fs</FONT>:<FONT CLASS=symbol>[</FONT><FONT CLASS=register>si</FONT><FONT CLASS=symbol>].</FONT>BaseH<FONT CLASS=symbol>,</FONT><FONT CLASS=register>dh</FONT>
                <FONT CLASS=instruct>add</FONT>     <FONT CLASS=register>si</FONT><FONT CLASS=symbol>,</FONT><FONT CLASS=pseudo>SIZE</FONT> Desc
                <FONT CLASS=instruct>loop</FONT>    InitLDT
                <FONT CLASS=instruct>ret</FONT>
InitLDT         <FONT CLASS=pseudo>ENDP</FONT>
<FONT CLASS=comment>;----------------------------------------------------------------------------</FONT>
RCodeSeg        <FONT CLASS=pseudo>ENDS</FONT>
                <FONT CLASS=pseudo>END</FONT>     Start
</PRE>
<H3>3.关于实例五的说明</H3>
<DIV>
程序中部分片段的背景和实现方法在前面的实例中做过介绍，下面主要就任务切换和通过调用门
实现任务内特权级变换时参数的复制等情形做些说明：
</DIV>
<H4 CLASS=indent>(1)从临时任务直接通过TSS切换到演示任务</H4>
<DIV>
从实模式切换到保护模式后，就认为进入了临时任务。但TR并没有指向临时任务的TSS。在从临
时任务切换到演示任务时，要把临时任务的现场保存到临时任务的TSS，这就要求TR指向临时任
务的TSS。所以首先要使用LTR指令把指向临时任务TSS描述符的选择子装入TR。在利用LTR指令显
示地装载TR时，并不引用TSS的内容，所以临时任务的TSS几乎没有初始化。理由是这不是真正的
任务切换。
</DIV>
<DIV>
临时任务采用段间转移指令JMP，直接指向演示任务的TSS，切换到演示任务。在执行切换到演示
任务的段间转移指令JMP时，CPL=0，JMP指令中所含选择子内的RPL=0，演示任务TSS的描述符特
权级DPL=0，并且是一个可用的TSS，所以顺利进行从临时任务到演示任务的切换。切换过程包
括：把临时任务的执行现场保存到临时任务的TSS中；从演示任务的TSS中恢复演示任务的现场；
把演示任务的LDT描述符选择子装载到LDTR等。从源程序可见，初始化后的演示任务的TSS中CS字
段存放的选择子是DemoCode_Sel，对应的描述符在演示任务的LDT中，并且DPL=2，它描述了代码
段DemoCode；挂起点是DemoBegin，所以在切换到演示任务后从该点开始执行，并且CPL=2。由于
使用JMP指令进行任务切换，所以不实施任务链接。
</DIV>
<H4 CLASS=indent>(2)从演示任务通过任务门切换到临时任务</H4>
<DIV>
演示任务采用段间转移指令JMP，通过任务门ToTempT切换到临时任务。在执行切换到临时任务的
段间转移指令JMP时，CPL=2，JMP指令中所含选择子ToTempT_Sel内的RPL=0，它指示的任务门的
描述符特权级DPL=3，所以可以访问该任务门。任务门内的选择子TempTSS_Sel指示临时任务
的TSS，并且此时的临时任务TSS是可用的，所以可顺利进行任务切换。演示任务的现场保存到演
示任务的TSS；临时任务的现场从临时任务的TSS恢复。
</DIV>
<DIV>
临时任务的挂起点是临时任务代码段的ToRela点，所以恢复后的临时任务从该点开始，CS含临时
任务代码段的选择子。但由于在演示任务内“强硬”地改变了临时任务TSS内的SS和DS等字段，
所以在恢复到临时任务时，SS和DS等段寄存器内已含有规范数据段的选择子，而非挂起时的原有
值。注意，这种做法不被提倡，但在这里却充分地展示了如何从TSS恢复任务。
</DIV>
<H4 CLASS=indent>(3)演示任务内的特权级变换和堆栈传递参数</H4>
<DIV>
演示任务采用段间调用指令CALL，通过调用门ToSubR调用子程序SubRB。执行段间调用指令CALL时
的CPL=2，指令所含指向调用门的选择子的RPL=2，调用门的DPL=3，所以对调用门的访问是允许
的；尽管调用门内的选择子的RPL=3，但由于它所指示的子程序代码段描述符的DPL=0，所以在调
用过程中就发生了从特权级2到特权级0的变换，同时堆栈也被切换。
</DIV>
<DIV>
演示代码段通过堆栈传递了两个参数给子程序SubRB。在把参数压入堆栈时，CPL=2，使用的也是
对应特权级2 的堆栈。通过调用门进入子程序后，CPL=0，使用0级堆栈。为此，把调用门ToSubR中
的DCount字段设置为2，表示在特权级向内层变换时，需从外层堆栈依次复制2各个双字参数到内层
堆栈。随着特权级变换，堆栈也跟着变换。这种在堆栈切换的同时复制所需参数的做法，保证了子
程序方便地访问堆栈中的参数，而无需考虑是哪个堆栈。
</DIV>
<DIV>
随着从子程序SubRB的返回，CPL=0变换为CPL=2，堆栈也回到2级堆栈。由于再次进入0级堆栈，总
是从空开始，所以在返回前不是非要保持内层堆栈平衡不可。但2级堆栈中的2个双字参数需要废
除。从源程序可见，这是采用带立即数的段间返回指令实现的，在返回的同时，自动废除外层堆栈
中的参数，同时也废除了内层堆栈中的参数。
</DIV>
<H4 CLASS=indent>(4)别名技术的应用</H4>
<DIV>
关于别名技术，前文已经作过介绍。实例五也有两处应用了别名技术。
</DIV>
<DIV>
为了把调用门ToSubR中的DCount字段设置成2，使用一个数据段描述符ToDLDT描述调用门所在演示
任务的LDT段，该描述符把演示任务的LDT段描述成数据段。
</DIV>
<DIV>
还有一处是把临时任务的TSS视为普通数据段。从演示任务切换到临时任务之前，把指向描述规范
数据段的描述符Normal的选择子Normal_Sel填到临时任务TSS中的各数据段寄存器(包括堆栈段寄
存器)字段，于是在切换到临时任务时，作为恢复临时任务的现场，该选择子就被装到DS等数据段
寄存器，对应的描述符Normal内的信息也就被装入到对应的高速缓冲寄存器中，达到为从临时任
务切换到实模式作准备的目的。
</DIV>
<!----------------------------->
<BR>
<!----------------------------->
<TABLE CELLSPACING=0 CELLPADDING=1 FRAME=BOX
       ALIGN=CENTER WIDTH="100%">
<TR>
<TD ROWSPAN=3 STYLE="color:'#ffff00'" ALIGN=CENTER>参考资料</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">
书&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;名</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">出&#160;&#160;版&#160;&#160;社</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">作&#160;&#160;&#160;&#160;者</TD>
</TR>
<TR>
<TD ALIGN=CENTER>《保护方式下的80386及其编程》</TD>
<TD ALIGN=CENTER>清华大学出版社</TD>
<TD ALIGN=CENTER>周明德主编</TD>
</TR>
<TR>
<TD ALIGN=CENTER>《80X86汇编语言程序设计教程》</TD>
<TD ALIGN=CENTER>清华大学出版社</TD>
<TD ALIGN=CENTER>扬季文主编</TD>
</TR>
</TABLE>
<!----------------------------->
<BR><BR><BR>
<!----------------------------->

</BODY>
</HTML>

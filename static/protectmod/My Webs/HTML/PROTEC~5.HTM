<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Final//EN">
<HTML>
<HEAD>
<TITLE>
保护模式教程
</TITLE>
<LINK REL=StyleSheet TYPE="text/css" HREF="main.css">
</HEAD>
<BODY CLASS=course>
<CENTER><H1 STYLE="color:'#0000ff'">五.任务状态段和控制门</H1></CENTER>
<DIV>
每个任务有一个任务状态段TSS，用于保存任务的有关信息，在任务内变换特权级和任务切换时，
要用到这些信息。为了控制任务内发生特权级变换的转移，为了控制任务切换，一般要通过控制
门进行这些转移。本文将介绍任务状态段和控制门。
</DIV>
<H2 STYLE="color:'#009999'">&#60;一&#62;系统段描述符</H2>
<DIV>
系统段是为了实现存储管理机制所使用的一种特别的段。在80386中，有两种系统段：任务状态
段TSS和局部描述符表LDT段。用于描述系统段的描述符称为系统段描述符。
</DIV>
<H3>1.系统段描述符的格式</H3>
<DIV>
系统段描述符的一般格式如下表所示。
</DIV>
<!----------------------------->
<BR>
<!----------------------------->
<TABLE CELLSPACING=0 CELLPADDING=1 FRAME=BOX
       ALIGN=CENTER WIDTH="100%">
<TR>
<TD ROWSPAN=2 STYLE="color:'#ffff00';" ALIGN=CENTER>系统段<BR>描述符</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+7</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+6</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+5</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+4</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+3</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+2</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+1</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+0</TD>
</TR>
<TR>
<TD ALIGN=CENTER>Base(31...24)</TD>
<TD COLSPAN=2 ALIGN=CENTER>Attributes</TD>
<TD COLSPAN=3 ALIGN=CENTER>Segment Base(23...0)</TD>
<TD COLSPAN=2 ALIGN=CENTER>Segment Limite(15...0)</TD>
</TR>
</TABLE>
<!----------------------------->
<BR>
<!----------------------------->
<TABLE CELLSPACING=0 CELLPADDING=1 FRAME=BOX
       ALIGN=CENTER CLASS=golden WIDTH="100%">
<TR>
<TD ROWSPAN=3 STYLE="color:'#ffff00';" ALIGN=CENTER>
系统段<BR>描述符<BR>的属性</TD>
<TD COLSPAN=8 ALIGN=CENTER STYLE="color:'#ffff00';">Byte m+6</TD>
<TD COLSPAN=8 ALIGN=CENTER STYLE="color:'#ffff00';">Byte m+5</TD>
</TR>
<TR>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT7</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT6</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT5</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT4</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT3</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT2</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT1</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT0</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT7</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT6</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT5</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT4</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT3</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT2</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT1</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT0</TD>
</TR>
<TR>
<TD ALIGN=CENTER>G</TD>
<TD ALIGN=CENTER>X</TD>
<TD ALIGN=CENTER>0</TD>
<TD ALIGN=CENTER>AVL</TD>
<TD COLSPAN=4 ALIGN=CENTER>Limit(19...16)</TD>
<TD ALIGN=CENTER>P</TD>
<TD COLSPAN=2 ALIGN=CENTER>DPL</TD>
<TD ALIGN=CENTER>DT0</TD>
<TD COLSPAN=4 ALIGN=CENTER>TYPE</TD>
</TR>
</TABLE>
<!----------------------------->
<BR>
<!----------------------------->
<DIV>
与存储段描述符相比，它们很相似，区分的标志是属性字节中的描述符类型位DT的值。DT=1表示
存储段，DT=0表示系统段。系统段描述符中的段基地址和段界限字段与存储段描述符中的意义完
全相同；属性中的G位、AVL位、P位和DPL字段的作用也完全相同。存储段描述符属性中的D位在
系统段描述符中不使用，现用符号X表示。系统段描述符的类型字段TYPE仍是4位，其编码及表示
的类型列于下表，其含义与存储段描述符的类型却完全不同。
</DIV>
<!----------------------------->
<BR>
<!----------------------------->
<TABLE BORDER=0 CELLPADDING=0 CELLSPACING=0 HEIGHT=0 WIDTH="100%" CLASS=transparent>
<TR>
<TD WIDTH="49%">
    <TABLE CELLSPACING=0 CELLPADDING=1 FRAME=BOX
           ALIGN=CENTER WIDTH="100%" CLASS=normal>
    <TR>
    <TD ROWSPAN=9 STYLE="color:'#ffff00'" ALIGN=CENTER>系统段<BR>类&#160;&#160;型</TD>
    <TD ALIGN=CENTER STYLE="color:'#ffff00';">类型编码</TD>
    <TD ALIGN=CENTER STYLE="color:'#ffff00';">说&#160;&#160;&#160;&#160;&#160;&#160;明</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>0</TD>
    <TD>未定义</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>1</TD>
    <TD>可用286TSS</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>2</TD>
    <TD>LDT</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>3</TD>
    <TD>忙的286TSS</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>4</TD>
    <TD>286调用门</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>5</TD>
    <TD>任务门</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>6</TD>
    <TD>286中断门</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>7</TD>
    <TD>286陷阱门</TD>
    </TR>
    </TABLE>
</TD>
<!----------------------------->
<TD WIDTH="2%"></TD>
<!----------------------------->
<TD WIDTH="49%">
    <TABLE CELLSPACING=0 CELLPADDING=1 FRAME=BOX
           ALIGN=CENTER WIDTH="100%" CLASS=normal>
    <TR>
    <TD ROWSPAN=9 STYLE="color:'#ffff00'" ALIGN=CENTER>系统段<BR>类&#160;&#160;型</TD>
    <TD ALIGN=CENTER STYLE="color:'#ffff00';">类型编码</TD>
    <TD ALIGN=CENTER STYLE="color:'#ffff00';">说&#160;&#160;&#160;&#160;&#160;&#160;明</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>8</TD>
    <TD>未定义</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>9</TD>
    <TD>可用386TSS</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>A</TD>
    <TD>未定义</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>B</TD>
    <TD>忙的386TSS</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>C</TD>
    <TD>386调用门</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>D</TD>
    <TD>未定义</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>E</TD>
    <TD>386中断门</TD>
    </TR>
    <TR>
    <TD ALIGN=CENTER>F</TD>
    <TD>386陷阱门</TD>
    </TR>
    </TABLE>
</TD>
</TR>
</TABLE>
<!----------------------------->
<BR>
<!----------------------------->
<DIV>
从上表可见，只有类型编码为2、1、3、9和B的描述符才是真正的系统段描述符，它们用于描述
系统段LDT和任务状态段TSS，其它类型的描述符是门描述符。
</DIV>
<DIV>
利用前文定义的存储段描述符结构类型DESC仍能方便地在程序中说明系统段描述符。需要注意
的是，系统段描述符的选择子不能用来读写系统段，要想读写系统段，必须使用别名技术。
</DIV>
<H3>2.LDT段描述符</H3>
<DIV>
LDT段描述符描述任务的局部描述符表段。例如：下面的描述符LDTABLE描述一个局部描述符表
段，基地址是654321H，以字节为单位的界限是1FH，描述符特权级是0。
</DIV>
<PRE>
    LDTABLE  DESC  <SPAN CLASS=symbol>&lt;</SPAN><SPAN CLASS=number>1FH</SPAN><SPAN CLASS=symbol>,</SPAN><SPAN CLASS=number>4321H</SPAN><SPAN CLASS=symbol>,</SPAN><SPAN CLASS=number>65H</SPAN><SPAN CLASS=symbol>,</SPAN><SPAN CLASS=number>82H</SPAN><SPAN CLASS=symbol>,,&gt;</SPAN>
</PRE>
<DIV>
LDT段描述符必须安排在全局描述符表中才有效。在装载LDTR寄存器时，描述符中的LDT段基地
址和段界限等信息被装入LDT段描述符高速缓冲寄存器中。
</DIV>
<H3>3.任务状态段描述符</H3>
<DIV>
任务状态段TSS用于保存任务的各种状态信息。任务状态段描述符描述某个任务状态段TSS描述符
分为286TSS和386TSS两类。TSS描述符规定了任务状态段的基地址和任务状态段的大小等信息。
例如，下面的描述符TempTask描述一个可用的386任务状态段，基地址是123456H，以字节为单位
的界限是104，描述符特权级是0。
</DIV>
<PRE>
    TempTask  DESC  <SPAN CLASS=symbol>&lt;</SPAN><SPAN CLASS=number>104</SPAN><SPAN CLASS=symbol>,</SPAN><SPAN CLASS=number>3456H</SPAN><SPAN CLASS=symbol>,</SPAN><SPAN CLASS=number>12H</SPAN><SPAN CLASS=symbol>,</SPAN><SPAN CLASS=number>89H</SPAN><SPAN CLASS=symbol>,,&gt;</SPAN>
</PRE>
<DIV>
在装载任务状态段寄存器TR时，描述符中的段基地址和段界限等信息被装入到TR的高速缓冲寄存
器中。在任务切换或执行LTR指令时，要装载TR寄存器。
</DIV>
<DIV>
TSS描述符中的类型规定：TSS要么为“忙”，要么为“可用”。如果一个任务是当前正执行的任
务，或者是用TSS中的链接字段沿挂起任务链接到当前任务上的任务，那么该任务是“忙”的任
务；否则该任务为“可用”任务。
</DIV>
<DIV>
利用段间转移指令JMP和段间调用指令CALL，直接通过TSS描述符或通过任务门可实现任务切换。
</DIV>
<H2 STYLE="color:'#009999'">&#60;二&#62;门描述符</H2>
<DIV>
除存储段描述符和系统段描述符外，还有一类门描述符。门描述符并不描述某种内存段，而是描
述控制转移的入口点。这种描述符好比一个同向另一代码段的门。通过这种门，可实现任务内特
权级的变换和任务间的切换。所以，这种门描述符也称为控制门。
</DIV>
<H3>1.门描述符的一般格式</H3>
<DIV>
门描述符的一般格式如下图所示。门描述符只有位于描述符内偏移5的类型字节与系统段保持一
致，也由该字节标示门描述符和系统段描述符。该字节内的P和DPL的意义与其它描述符种中的
意义相同。其它字节主要用于存放一个48位的全指针(16位的选择子和32位的偏移量)。
</DIV>
<!----------------------------->
<BR>
<!----------------------------->
<TABLE CELLSPACING=0 CELLPADDING=1 FRAME=BOX
       ALIGN=CENTER WIDTH="100%">
<TR>
<TD ROWSPAN=2 STYLE="color:'#ffff00';" ALIGN=CENTER>门描述符</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+7</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+6</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+5</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+4</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+3</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+2</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+1</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">m+0</TD>
</TR>
<TR>
<TD COLSPAN=2 ALIGN=CENTER>Offset(31...16)</TD>
<TD COLSPAN=2 ALIGN=CENTER>Attributes</TD>
<TD COLSPAN=2 ALIGN=CENTER>Selector</TD>
<TD COLSPAN=2 ALIGN=CENTER>Offset(15...0)</TD>
</TR>
</TABLE>
<!----------------------------->
<BR>
<!----------------------------->
<TABLE FRAME=BOX CELLSPACING=0 CELLPADDING=1
       ALIGN=CENTER CLASS=golden WIDTH="100%">
<TR>
<TD ROWSPAN=3 STYLE="color:'#ffff00';" ALIGN=CENTER>
门描述<BR>符属性</TD>
<TD COLSPAN=8 ALIGN=CENTER STYLE="color:'#ffff00';">Byte m+5</TD>
<TD COLSPAN=8 ALIGN=CENTER STYLE="color:'#ffff00';">Byte m+4</TD>
</TR>
<TR>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT7</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT6</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT5</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT4</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT3</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT2</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT1</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT0</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT7</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT6</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT5</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT4</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT3</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT2</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT1</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">BIT0</TD>
</TR>
<TR>
<TD ALIGN=CENTER>P</TD>
<TD COLSPAN=2 ALIGN=CENTER>DPL</TD>
<TD ALIGN=CENTER>DT0</TD>
<TD COLSPAN=4 ALIGN=CENTER>TYPE</TD>
<TD COLSPAN=3 ALIGN=CENTER>000</TD>
<TD COLSPAN=5 ALIGN=CENTER>Dword Count</TD>
</TR>
</TABLE>
<!----------------------------->
<BR>
<!----------------------------->
<DIV>
根据上图给出的门描述符的结构，可定义如下的门描述符结构类型：
</DIV>
<PRE>
    GATE     <SPAN CLASS=pseudo>STRUC</SPAN>      <SPAN CLASS=comment>;门结构类型定义</SPAN>
    OFFSETL  <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>  <SPAN CLASS=comment>;32位偏移的低16位</SPAN>
    SELECTOR <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>  <SPAN CLASS=comment>;选择子</SPAN>
    DCOUNT   <SPAN CLASS=pseudo>DB</SPAN>      <SPAN CLASS=number>0</SPAN>  <SPAN CLASS=comment>;双字计数字段</SPAN>
    GTYPE    <SPAN CLASS=pseudo>DB</SPAN>      <SPAN CLASS=number>0</SPAN>  <SPAN CLASS=comment>;类型</SPAN>
    OFFSETH  <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>  <SPAN CLASS=comment>;32位偏移的高16位</SPAN>
    GATE     <SPAN CLASS=pseudo>ENDS</SPAN>
</PRE>
<DIV>
利用门描述符结构类型GATE能方便地在程序中说明门描述符。
</DIV>
<DIV>
例如，下面的门描述符SUBRG描述一个386调用门，门内的选择子是10H，入口偏移是123456H，门
描述符特权级是3，双字计数是0。
</DIV>
<PRE>
    SUBRG    GATE  <SPAN CLASS=symbol>&lt;</SPAN><SPAN CLASS=number>3456</SPAN><SPAN CLASS=symbol>,</SPAN><SPAN CLASS=number>10H</SPAN><SPAN CLASS=symbol>,,</SPAN><SPAN CLASS=number>8CH</SPAN><SPAN CLASS=symbol>+</SPAN><SPAN CLASS=number>60H</SPAN><SPAN CLASS=symbol>,</SPAN><SPAN CLASS=number>12H</SPAN><SPAN CLASS=symbol>&gt</SPAN>
</PRE>
<DIV>
从上述描述符类型的列表中可见，门描述符又可分为：任务门、调用门、中断门和陷阱门，并且
除任务门外，其它描述符还各分成286和386两种。
</DIV>
<H3>2.调用门</H3>
<DIV>
调用门描述某个子程序的入口。调用门内的选择子必须实现代码段描述符，调用门内的偏移是对
应代码段内的偏移。利用段间调用指令CALL，通过调用门可实现任务内从外层特权级变换到内层
特权级。
</DIV>
<DIV>
在上图所示的门描述符内偏移4字节的位0至位4是双字计数字段，该字段只在调用门描述符中有
效，在其它门描述符中无效。主程序通过堆栈把入口参数传递给子程序，如果在利用调用门调用
子程序时引起特权级的转换和堆栈的改变，那么就需要将外层堆栈中的参数复制到内层堆栈。该
双字计数字段就是用于说明这种情况发生时，要复制的双字参数的数量。
</DIV>
<H3>3.任务门</H3>
<DIV>
任务门指示任务。任务门内的选择子必须指示GDT中的任务状态段TSS描述符，门中的偏移无意
义。任务的入口点保存在TSS中。利用段间转移指令JMP和段间调用指令CALL，通过任务门可实
现任务切换。
</DIV>
<H3>4.中断门和陷阱门</H3>
<DIV>
中断门和陷阱门描述中断/异常处理程序的人口点。中断门和陷阱门内的选择子必须指向代码段
描述符，门内的偏移就是对应代码段的人口点的偏移。中断门和陷阱门只有在中断描述符表IDT中
才有效。关于中断门和陷阱门的区别将在以后的文章中论述。
</DIV>
<H2 STYLE="color:'#009999'">&#60;三&#62;任务状态段</H2>
<DIV>
任务状态段(Task State Segment)是保存一个任务重要信息的特殊段。任务状态段描述符用于
描述这样的系统段。任务状态段寄存器TR的可见部分含有当前任务的任务状态段描述符的选择
子，TR的不可见的高速缓冲寄存器部分含有当前任务状态段的段基地址和段界限等信息。
</DIV>
<DIV>
TSS在任务切换过程中起着重要作用，通过它实现任务的挂起和恢复。所谓任务切换是指，挂起
当前正在执行的任务，恢复或启动另一任务的执行。在任务切换过程中，首先，处理器中各寄
存器的当前值被自动保存到TR所指定的TSS中；然后，下一任务的TSS的选择子被装入TR；最后，
从TR所指定的TSS中取出各寄存器的值送到处理器的各寄存器中。由此可见，通过在TSS中保存
任务现场各寄存器状态的完整映象，实现任务的切换。
</DIV>
<DIV>
任务状态段TSS的基本格式如下图所示。
</DIV>
<!----------------------------->
<BR>
<!----------------------------->
<TABLE FRAME=BOX CELLSPACING=0 CELLPADDING=1
       ALIGN=CENTER>
<TR>
<TD ROWSPAN=27 ALIGN=center STYLE="color:'#ffff00';">
任<BR><BR>务<BR><BR>状<BR><BR>态<BR><BR>段<BR><BR>基<BR><BR>本<BR><BR>部<BR><BR>分<BR><BR>的<BR><BR>格<BR><BR>式</TD>

<TD ALIGN=center STYLE="color:'#ffff00';">BIT31―BIT16</TD>
<TD ALIGN=center STYLE="color:'#ffff00';">BIT15―BIT1</TD>
<TD ALIGN=center STYLE="color:'#ffff00';">BIT0</TD>
<TD ALIGN=center STYLE="color:'#ffff00';">Offset</TD>
</TR>

<TR>
<TD ALIGN=center>0000000000000000</TD>
<TD ALIGN=center COLSPAN=2>链接字段</TD>
<TD ALIGN=center>0</TD>
</TR>

<TR>
<TD ALIGN=center COLSPAN=3>ESP0</TD>
<TD ALIGN=center>4</TD>
</TR>

<TR>
<TD ALIGN=center>0000000000000000</TD>
<TD ALIGN=center COLSPAN=2>SS0</TD>
<TD ALIGN=center>8</TD>
</TR>

<TR>
<TD ALIGN=center COLSPAN=3>ESP1</TD>
<TD ALIGN=center>0CH</TD>
</TR>

<TR>
<TD ALIGN=center>0000000000000000</TD>
<TD ALIGN=center COLSPAN=2>SS1</TD>
<TD ALIGN=center>10H</TD>
</TR>

<TR>
<TD ALIGN=center COLSPAN=3>ESP2</TD>
<TD ALIGN=center>14H</TD>
</TR>

<TR>
<TD ALIGN=center>0000000000000000</TD>
<TD ALIGN=center COLSPAN=2>SS2</TD>
<TD ALIGN=center>18H</TD>
</TR>

<TR>
<TD ALIGN=center COLSPAN=3>CR3</TD>
<TD ALIGN=center>1CH</TD>
</TR>

<TR>
<TD ALIGN=center COLSPAN=3>EIP</TD>
<TD ALIGN=center>20H</TD>
</TR>

<TR>
<TD ALIGN=center COLSPAN=3>EFLAGS</TD>
<TD ALIGN=center>24H</TD>
</TR>

<TR>
<TD ALIGN=center COLSPAN=3>EAX</TD>
<TD ALIGN=center>28H</TD>
</TR>

<TR>
<TD ALIGN=center COLSPAN=3>ECX</TD>
<TD ALIGN=center>2CH</TD>
</TR>

<TR>
<TD ALIGN=center COLSPAN=3>EDX</TD>
<TD ALIGN=center>30H</TD>
</TR>

<TR>
<TD ALIGN=center COLSPAN=3>EBX</TD>
<TD ALIGN=center>34H</TD>
</TR>

<TR>
<TD ALIGN=center COLSPAN=3>ESP</TD>
<TD ALIGN=center>38H</TD>
</TR>

<TR>
<TD ALIGN=center COLSPAN=3>EBP</TD>
<TD ALIGN=center>3CH</TD>
</TR>

<TR>
<TD ALIGN=center COLSPAN=3>ESI</TD>
<TD ALIGN=center>40H</TD>
</TR>

<TR>
<TD ALIGN=center COLSPAN=3>EDI</TD>
<TD ALIGN=center>44H</TD>
</TR>

<TR>
<TD ALIGN=center>0000000000000000</TD>
<TD ALIGN=center COLSPAN=2>ES</TD>
<TD ALIGN=center>48H</TD>
</TR>

<TR>
<TD ALIGN=center>0000000000000000</TD>
<TD ALIGN=center COLSPAN=2>CS</TD>
<TD ALIGN=center>4CH</TD>
</TR>

<TR>
<TD ALIGN=center>0000000000000000</TD>
<TD ALIGN=center COLSPAN=2>SS</TD>
<TD ALIGN=center>50H</TD>
</TR>

<TR>
<TD ALIGN=center>0000000000000000</TD>
<TD ALIGN=center COLSPAN=2>DS</TD>
<TD ALIGN=center>54H</TD>
</TR>

<TR>
<TD ALIGN=center>0000000000000000</TD>
<TD ALIGN=center COLSPAN=2>FS</TD>
<TD ALIGN=center>58H</TD>
</TR>

<TR>
<TD ALIGN=center>0000000000000000</TD>
<TD ALIGN=center COLSPAN=2>GS</TD>
<TD ALIGN=center>5CH</TD>
</TR>

<TR>
<TD ALIGN=center>0000000000000000</TD>
<TD ALIGN=center COLSPAN=2>LDTR</TD>
<TD ALIGN=center>60H</TD>
</TR>

<TR>
<TD ALIGN=center>I/O许可位图偏移</TD>
<TD ALIGN=center>000000000000000</TD>
<TD ALIGN=center>T</TD>
<TD ALIGN=center>64H</TD>
</TR>
</TABLE>
<!----------------------------->
<BR>
<!----------------------------->
<DIV>
从图中可见，TSS的基本格式由104字节组成。这104字节的基本格式是不可改变的，但在此之外
系统软件还可定义若干附加信息。基本的104字节可分为链接字段区域、内层堆栈指针区域、地
址映射寄存器区域、寄存器保存区域和其它字段等五个区域。
</DIV>
<H3>1.寄存器保存区域</H3>
<DIV>
寄存器保存区域位于TSS内偏移20H至5FH处，用于保存通用寄存器、段寄存器、指令指针和标志
寄存器。当TSS对应的任务正在执行时，保存区域是未定义的；在当前任务被切换出时，这些寄
存器的当前值就保存在该区域。当下次切换回原任务时，再从保存区域恢复出这些寄存器的值，
从而，使处理器恢复成该任务换出前的状态，最终使任务能够恢复执行。
</DIV>
<DIV>
从上图可见，各通用寄存器对应一个32位的双字，指令指针和标志寄存器各对应一个32位的双
字；各段寄存器也对应一个32位的双字，段寄存器中的选择子只有16位，安排再双字的低16位，
高16位未用，一般应填为0。
</DIV>
<H3>2.内层堆栈指针区域</H3>
<DIV>
为了有效地实现保护，同一个任务在不同的特权级下使用不同的堆栈。例如，当从外层特权
级3变换到内层特权级0时，任务使用的堆栈也同时从3级变换到0级堆栈；当从内层特权级0变
换到外层特权级3时，任务使用的堆栈也同时从0级堆栈变换到3级堆栈。所以，一个任务可能
具有四个堆栈，对应四个特权级。四个堆栈需要四个堆栈指针。
</DIV>
<DIV>
TSS的内层堆栈指针区域中有三个堆栈指针，它们都是48位的全指针(16位的选择子和32位的
偏移)，分别指向0级、1级和2级堆栈的栈顶，依次存放在TSS中偏移为4、12及20开始的位置。
当发生向内层转移时，把适当的堆栈指针装入SS及ESP寄存器以变换到内层堆栈，外层堆栈的
指针保存在内层堆栈中。没有指向3级堆栈的指针，因为3级是最外层，所以任何一个向内层
的转移都不可能转移到3级。
</DIV>
<DIV>
但是，当特权级由内层向外层变换时，并不把内层堆栈的指针保存到TSS的内层堆栈指针区域。
实际上，处理器从不向该区域进行写入，除非程序设计者认为改变该区域的值。这表明向内层
转移时，总是把内层堆栈认为是一个空栈。因此，不允许发生同级内层转移的递归，一旦发生
向某级内层的转移，那么返回到外层的正常途径是相匹配的向外层返回。
</DIV>
<H3>3.地址映射寄存器区域</H3>
<DIV>
从虚拟地址空间到线性地址空间的映射由GDT和LDT确定，与特定任务相关的部分由LDT确定，
而LDT又由LDTR确定。如果采用分页机制，那么由线性地址空间到物理地址空间的映射由包含
页目录表起始物理地址的控制寄存器CR3确定。所以，与特定任务相关的虚拟地址空间到物理
地址空间的映射由LDTR和CR3确定。显然，随着任务的切换，地址映射关系也要切换。
</DIV>
<DIV>
TSS的地址映射寄存器区域由位于偏移1CH处的双字字段(CR3)和位于偏移60H处的字
字段(LDTR)组成。在任务切换时，处理器自动从要执行任务的TSS中取出这两个字段，分别
装入到寄存器CR3和LDTR。这样就改变了虚拟地址空间到物理地址空间的映射。
</DIV>
<DIV>
但是，在任务切换时，处理器并不把换出任务但是的寄存器CR3和LDTR的内容保存到TSS中的
地址映射寄存器区域。事实上，处理器也从来不向该区域自动写入。因此，如果程序改变
了LDTR或CR3，那么必须把新值人为地保存到TSS中的地址映射寄存器区域相应字段中。可以
通过别名技术实现此功能。
</DIV>
<H3>4.链接字段</H3>
<DIV>
链接字段安排在TSS内偏移0开始的双字中，其高16位未用。在起链接作用时，地16位保存前
一任务的TSS描述符的选择子。
</DIV>
<DIV>
如果当前的任务由段间调用指令CALL或中断/异常而激活，那么链接字段保存被挂起任务的
TSS的选择子，并且标志寄存器EFLAGS中的NT位被置1，使链接字段有效。在返回时，由
于NT标志位为1，返回指令RET或中断返回指令IRET将使得控制沿链接字段所指恢复到链上的
前一个任务。
</DIV>
<H3>5.其它字段</H3>
<DIV>
为了实现输入/输出保护，要使用I/O许可位图。任务使用的I/O许可位图也存放在TSS中，作
为TSS的扩展部分。在TSS内偏移66H处的字用于存放I/O许可位图在TSS内的偏移(从TSS开头
开始计算)。关于I/O许可位图的作用，以后的文章中将会详细介绍。
</DIV>
<DIV>
在TSS内偏移64H处的字是为任务提供的特别属性。在80386中，只定义了一种属性，即调试
陷阱。该属性是字的最低位，用T表示。该字的其它位置被保留，必须被置为0。在发生任务
切换时，如果进入任务的T位为1，那么在任务切换完成之后，新任务的第一条指令执行之前
产生调试陷阱。
</DIV>
<H3>6.用结构类型定义TSS</H3>
<DIV>
根据上图给出的任务状态段TSS的结构，可定义如下的TSS结构类型：
</DIV>
<PRE>
<SPAN CLASS=comment>;----------------------------------------------------------------------------</SPAN>
<SPAN CLASS=comment>;任务状态段结构类型定义</SPAN>
<SPAN CLASS=comment>;----------------------------------------------------------------------------</SPAN>
TSS             <SPAN CLASS=pseudo>STRUC</SPAN>
TRLink          <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;链接字段</SPAN>
                <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;不使用,置为0</SPAN>
TRESP0          <SPAN CLASS=pseudo>DD</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;0级堆栈指针</SPAN>
TRSS0           <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;0级堆栈段寄存器</SPAN>
                <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;不使用,置为0</SPAN>
TRESP1          <SPAN CLASS=pseudo>DD</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;1级堆栈指针</SPAN>
TRSS1           <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;1级堆栈段寄存器</SPAN>
                <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;不使用,置为0</SPAN>
TRESP2          <SPAN CLASS=pseudo>DD</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;2级堆栈指针</SPAN>
TRSS2           <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;2级堆栈段寄存器</SPAN>
                <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;不使用,置为0</SPAN>
TRCR3           <SPAN CLASS=pseudo>DD</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;CR3</SPAN>
TREIP           <SPAN CLASS=pseudo>DD</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;EIP</SPAN>
TREFlag         <SPAN CLASS=pseudo>DD</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;EFLAGS</SPAN>
TREAX           <SPAN CLASS=pseudo>DD</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;EAX</SPAN>
TRECX           <SPAN CLASS=pseudo>DD</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;ECX</SPAN>
TREDX           <SPAN CLASS=pseudo>DD</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;EDX</SPAN>
TREBX           <SPAN CLASS=pseudo>DD</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;EBX</SPAN>
TRESP           <SPAN CLASS=pseudo>DD</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;ESP</SPAN>
TREBP           <SPAN CLASS=pseudo>DD</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;EBP</SPAN>
TRESI           <SPAN CLASS=pseudo>DD</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;ESI</SPAN>
TREDI           <SPAN CLASS=pseudo>DD</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;EDI</SPAN>
TRES            <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;ES</SPAN>
                <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;不使用,置为0</SPAN>
TRCS            <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;CS</SPAN>
                <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;不使用,置为0</SPAN>
TRSS            <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;SS</SPAN>
                <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;不使用,置为0</SPAN>
TRDS            <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;DS</SPAN>
                <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;不使用,置为0</SPAN>
TRFS            <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;FS</SPAN>
                <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;不使用,置为0</SPAN>
TRGS            <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;GS</SPAN>
                <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;不使用,置为0</SPAN>
TRLDTR          <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;LDTR</SPAN>
                <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;不使用,置为0</SPAN>
TRTrip          <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=number>0</SPAN>      <SPAN CLASS=comment>;调试陷阱标志(只用位0)</SPAN>
TRIOMap         <SPAN CLASS=pseudo>DW</SPAN>      <SPAN CLASS=symbol>$+</SPAN><SPAN CLASS=number>2</SPAN>    <SPAN CLASS=comment>;指向I/O许可位图区的段内偏移</SPAN>
TSS             <SPAN CLASS=pseudo>ENDS</SPAN>
</PRE>
<!----------------------------->
<BR>
<!----------------------------->
<TABLE CELLSPACING=0 CELLPADDING=1 FRAME=BOX
       ALIGN=CENTER WIDTH="100%">
<TR>
<TD ROWSPAN=3 STYLE="color:'#ffff00'" ALIGN=CENTER>参考资料</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">
书&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;名</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">出&#160;&#160;版&#160;&#160;社</TD>
<TD ALIGN=CENTER STYLE="color:'#ffff00';">作&#160;&#160;&#160;&#160;者</TD>
</TR>
<TR>
<TD ALIGN=CENTER>《保护方式下的80386及其编程》</TD>
<TD ALIGN=CENTER>清华大学出版社</TD>
<TD ALIGN=CENTER>周明德主编</TD>
</TR>
<TR>
<TD ALIGN=CENTER>《80X86汇编语言程序设计教程》</TD>
<TD ALIGN=CENTER>清华大学出版社</TD>
<TD ALIGN=CENTER>扬季文主编</TD>
</TR>
</TABLE>
<!----------------------------->
<BR><BR><BR>
<!----------------------------->

</BODY>
</HTML>
